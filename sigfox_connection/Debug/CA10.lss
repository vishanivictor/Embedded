
CA10.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  00001360  000013f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001360  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  0080011a  0080011a  0000140e  2**0
                  ALLOC
  3 .stab         00001710  00000000  00000000  00001410  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001010  00000000  00000000  00002b20  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000027  00000000  00000000  00003b30  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000a0  00000000  00000000  00003b58  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000905  00000000  00000000  00003bf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000606  00000000  00000000  000044fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000026d  00000000  00000000  00004b03  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000020b  00000000  00000000  00004d70  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__vector_1>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 02 06 	jmp	0xc04	; 0xc04 <__vector_14>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2128>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e0 e6       	ldi	r30, 0x60	; 96
     17e:	f3 e1       	ldi	r31, 0x13	; 19
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	aa 31       	cpi	r26, 0x1A	; 26
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	11 e0       	ldi	r17, 0x01	; 1
     18e:	aa e1       	ldi	r26, 0x1A	; 26
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a6 32       	cpi	r26, 0x26	; 38
     198:	b1 07       	cpc	r27, r17
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <main>
     1a0:	0c 94 ae 09 	jmp	0x135c	; 0x135c <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <vfprintf>:
     1a8:	a3 e1       	ldi	r26, 0x13	; 19
     1aa:	b0 e0       	ldi	r27, 0x00	; 0
     1ac:	ea ed       	ldi	r30, 0xDA	; 218
     1ae:	f0 e0       	ldi	r31, 0x00	; 0
     1b0:	0c 94 7e 06 	jmp	0xcfc	; 0xcfc <__prologue_saves__>
     1b4:	7c 01       	movw	r14, r24
     1b6:	1b 01       	movw	r2, r22
     1b8:	6a 01       	movw	r12, r20
     1ba:	fc 01       	movw	r30, r24
     1bc:	17 82       	std	Z+7, r1	; 0x07
     1be:	16 82       	std	Z+6, r1	; 0x06
     1c0:	83 81       	ldd	r24, Z+3	; 0x03
     1c2:	81 ff       	sbrs	r24, 1
     1c4:	66 c3       	rjmp	.+1740   	; 0x892 <vfprintf+0x6ea>
     1c6:	be 01       	movw	r22, r28
     1c8:	6f 5f       	subi	r22, 0xFF	; 255
     1ca:	7f 4f       	sbci	r23, 0xFF	; 255
     1cc:	4b 01       	movw	r8, r22
     1ce:	f7 01       	movw	r30, r14
     1d0:	93 81       	ldd	r25, Z+3	; 0x03
     1d2:	f1 01       	movw	r30, r2
     1d4:	93 fd       	sbrc	r25, 3
     1d6:	85 91       	lpm	r24, Z+
     1d8:	93 ff       	sbrs	r25, 3
     1da:	81 91       	ld	r24, Z+
     1dc:	1f 01       	movw	r2, r30
     1de:	88 23       	and	r24, r24
     1e0:	09 f4       	brne	.+2      	; 0x1e4 <vfprintf+0x3c>
     1e2:	53 c3       	rjmp	.+1702   	; 0x88a <vfprintf+0x6e2>
     1e4:	85 32       	cpi	r24, 0x25	; 37
     1e6:	39 f4       	brne	.+14     	; 0x1f6 <vfprintf+0x4e>
     1e8:	93 fd       	sbrc	r25, 3
     1ea:	85 91       	lpm	r24, Z+
     1ec:	93 ff       	sbrs	r25, 3
     1ee:	81 91       	ld	r24, Z+
     1f0:	1f 01       	movw	r2, r30
     1f2:	85 32       	cpi	r24, 0x25	; 37
     1f4:	39 f4       	brne	.+14     	; 0x204 <vfprintf+0x5c>
     1f6:	b7 01       	movw	r22, r14
     1f8:	90 e0       	ldi	r25, 0x00	; 0
     1fa:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     1fe:	56 01       	movw	r10, r12
     200:	65 01       	movw	r12, r10
     202:	e5 cf       	rjmp	.-54     	; 0x1ce <vfprintf+0x26>
     204:	10 e0       	ldi	r17, 0x00	; 0
     206:	51 2c       	mov	r5, r1
     208:	20 e0       	ldi	r18, 0x00	; 0
     20a:	20 32       	cpi	r18, 0x20	; 32
     20c:	a0 f4       	brcc	.+40     	; 0x236 <vfprintf+0x8e>
     20e:	8b 32       	cpi	r24, 0x2B	; 43
     210:	69 f0       	breq	.+26     	; 0x22c <vfprintf+0x84>
     212:	30 f4       	brcc	.+12     	; 0x220 <vfprintf+0x78>
     214:	80 32       	cpi	r24, 0x20	; 32
     216:	59 f0       	breq	.+22     	; 0x22e <vfprintf+0x86>
     218:	83 32       	cpi	r24, 0x23	; 35
     21a:	69 f4       	brne	.+26     	; 0x236 <vfprintf+0x8e>
     21c:	20 61       	ori	r18, 0x10	; 16
     21e:	2c c0       	rjmp	.+88     	; 0x278 <vfprintf+0xd0>
     220:	8d 32       	cpi	r24, 0x2D	; 45
     222:	39 f0       	breq	.+14     	; 0x232 <vfprintf+0x8a>
     224:	80 33       	cpi	r24, 0x30	; 48
     226:	39 f4       	brne	.+14     	; 0x236 <vfprintf+0x8e>
     228:	21 60       	ori	r18, 0x01	; 1
     22a:	26 c0       	rjmp	.+76     	; 0x278 <vfprintf+0xd0>
     22c:	22 60       	ori	r18, 0x02	; 2
     22e:	24 60       	ori	r18, 0x04	; 4
     230:	23 c0       	rjmp	.+70     	; 0x278 <vfprintf+0xd0>
     232:	28 60       	ori	r18, 0x08	; 8
     234:	21 c0       	rjmp	.+66     	; 0x278 <vfprintf+0xd0>
     236:	27 fd       	sbrc	r18, 7
     238:	27 c0       	rjmp	.+78     	; 0x288 <vfprintf+0xe0>
     23a:	30 ed       	ldi	r19, 0xD0	; 208
     23c:	38 0f       	add	r19, r24
     23e:	3a 30       	cpi	r19, 0x0A	; 10
     240:	78 f4       	brcc	.+30     	; 0x260 <vfprintf+0xb8>
     242:	26 ff       	sbrs	r18, 6
     244:	06 c0       	rjmp	.+12     	; 0x252 <vfprintf+0xaa>
     246:	fa e0       	ldi	r31, 0x0A	; 10
     248:	1f 9f       	mul	r17, r31
     24a:	30 0d       	add	r19, r0
     24c:	11 24       	eor	r1, r1
     24e:	13 2f       	mov	r17, r19
     250:	13 c0       	rjmp	.+38     	; 0x278 <vfprintf+0xd0>
     252:	6a e0       	ldi	r22, 0x0A	; 10
     254:	56 9e       	mul	r5, r22
     256:	30 0d       	add	r19, r0
     258:	11 24       	eor	r1, r1
     25a:	53 2e       	mov	r5, r19
     25c:	20 62       	ori	r18, 0x20	; 32
     25e:	0c c0       	rjmp	.+24     	; 0x278 <vfprintf+0xd0>
     260:	8e 32       	cpi	r24, 0x2E	; 46
     262:	21 f4       	brne	.+8      	; 0x26c <vfprintf+0xc4>
     264:	26 fd       	sbrc	r18, 6
     266:	11 c3       	rjmp	.+1570   	; 0x88a <vfprintf+0x6e2>
     268:	20 64       	ori	r18, 0x40	; 64
     26a:	06 c0       	rjmp	.+12     	; 0x278 <vfprintf+0xd0>
     26c:	8c 36       	cpi	r24, 0x6C	; 108
     26e:	11 f4       	brne	.+4      	; 0x274 <vfprintf+0xcc>
     270:	20 68       	ori	r18, 0x80	; 128
     272:	02 c0       	rjmp	.+4      	; 0x278 <vfprintf+0xd0>
     274:	88 36       	cpi	r24, 0x68	; 104
     276:	41 f4       	brne	.+16     	; 0x288 <vfprintf+0xe0>
     278:	f1 01       	movw	r30, r2
     27a:	93 fd       	sbrc	r25, 3
     27c:	85 91       	lpm	r24, Z+
     27e:	93 ff       	sbrs	r25, 3
     280:	81 91       	ld	r24, Z+
     282:	1f 01       	movw	r2, r30
     284:	81 11       	cpse	r24, r1
     286:	c1 cf       	rjmp	.-126    	; 0x20a <vfprintf+0x62>
     288:	9b eb       	ldi	r25, 0xBB	; 187
     28a:	98 0f       	add	r25, r24
     28c:	93 30       	cpi	r25, 0x03	; 3
     28e:	18 f4       	brcc	.+6      	; 0x296 <vfprintf+0xee>
     290:	20 61       	ori	r18, 0x10	; 16
     292:	80 5e       	subi	r24, 0xE0	; 224
     294:	06 c0       	rjmp	.+12     	; 0x2a2 <vfprintf+0xfa>
     296:	9b e9       	ldi	r25, 0x9B	; 155
     298:	98 0f       	add	r25, r24
     29a:	93 30       	cpi	r25, 0x03	; 3
     29c:	08 f0       	brcs	.+2      	; 0x2a0 <vfprintf+0xf8>
     29e:	aa c1       	rjmp	.+852    	; 0x5f4 <vfprintf+0x44c>
     2a0:	2f 7e       	andi	r18, 0xEF	; 239
     2a2:	26 ff       	sbrs	r18, 6
     2a4:	16 e0       	ldi	r17, 0x06	; 6
     2a6:	2f 73       	andi	r18, 0x3F	; 63
     2a8:	72 2e       	mov	r7, r18
     2aa:	85 36       	cpi	r24, 0x65	; 101
     2ac:	21 f4       	brne	.+8      	; 0x2b6 <vfprintf+0x10e>
     2ae:	f2 2f       	mov	r31, r18
     2b0:	f0 64       	ori	r31, 0x40	; 64
     2b2:	7f 2e       	mov	r7, r31
     2b4:	08 c0       	rjmp	.+16     	; 0x2c6 <vfprintf+0x11e>
     2b6:	86 36       	cpi	r24, 0x66	; 102
     2b8:	21 f4       	brne	.+8      	; 0x2c2 <vfprintf+0x11a>
     2ba:	62 2f       	mov	r22, r18
     2bc:	60 68       	ori	r22, 0x80	; 128
     2be:	76 2e       	mov	r7, r22
     2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <vfprintf+0x11e>
     2c2:	11 11       	cpse	r17, r1
     2c4:	11 50       	subi	r17, 0x01	; 1
     2c6:	77 fe       	sbrs	r7, 7
     2c8:	07 c0       	rjmp	.+14     	; 0x2d8 <vfprintf+0x130>
     2ca:	1c 33       	cpi	r17, 0x3C	; 60
     2cc:	48 f4       	brcc	.+18     	; 0x2e0 <vfprintf+0x138>
     2ce:	44 24       	eor	r4, r4
     2d0:	43 94       	inc	r4
     2d2:	41 0e       	add	r4, r17
     2d4:	27 e0       	ldi	r18, 0x07	; 7
     2d6:	0b c0       	rjmp	.+22     	; 0x2ee <vfprintf+0x146>
     2d8:	18 30       	cpi	r17, 0x08	; 8
     2da:	30 f4       	brcc	.+12     	; 0x2e8 <vfprintf+0x140>
     2dc:	21 2f       	mov	r18, r17
     2de:	06 c0       	rjmp	.+12     	; 0x2ec <vfprintf+0x144>
     2e0:	27 e0       	ldi	r18, 0x07	; 7
     2e2:	4c e3       	ldi	r20, 0x3C	; 60
     2e4:	44 2e       	mov	r4, r20
     2e6:	03 c0       	rjmp	.+6      	; 0x2ee <vfprintf+0x146>
     2e8:	27 e0       	ldi	r18, 0x07	; 7
     2ea:	17 e0       	ldi	r17, 0x07	; 7
     2ec:	41 2c       	mov	r4, r1
     2ee:	56 01       	movw	r10, r12
     2f0:	74 e0       	ldi	r23, 0x04	; 4
     2f2:	a7 0e       	add	r10, r23
     2f4:	b1 1c       	adc	r11, r1
     2f6:	f6 01       	movw	r30, r12
     2f8:	60 81       	ld	r22, Z
     2fa:	71 81       	ldd	r23, Z+1	; 0x01
     2fc:	82 81       	ldd	r24, Z+2	; 0x02
     2fe:	93 81       	ldd	r25, Z+3	; 0x03
     300:	04 2d       	mov	r16, r4
     302:	a4 01       	movw	r20, r8
     304:	0e 94 0e 08 	call	0x101c	; 0x101c <__ftoa_engine>
     308:	6c 01       	movw	r12, r24
     30a:	09 81       	ldd	r16, Y+1	; 0x01
     30c:	00 ff       	sbrs	r16, 0
     30e:	02 c0       	rjmp	.+4      	; 0x314 <vfprintf+0x16c>
     310:	03 ff       	sbrs	r16, 3
     312:	06 c0       	rjmp	.+12     	; 0x320 <vfprintf+0x178>
     314:	71 fc       	sbrc	r7, 1
     316:	07 c0       	rjmp	.+14     	; 0x326 <vfprintf+0x17e>
     318:	72 fc       	sbrc	r7, 2
     31a:	08 c0       	rjmp	.+16     	; 0x32c <vfprintf+0x184>
     31c:	61 2c       	mov	r6, r1
     31e:	08 c0       	rjmp	.+16     	; 0x330 <vfprintf+0x188>
     320:	3d e2       	ldi	r19, 0x2D	; 45
     322:	63 2e       	mov	r6, r19
     324:	05 c0       	rjmp	.+10     	; 0x330 <vfprintf+0x188>
     326:	2b e2       	ldi	r18, 0x2B	; 43
     328:	62 2e       	mov	r6, r18
     32a:	02 c0       	rjmp	.+4      	; 0x330 <vfprintf+0x188>
     32c:	90 e2       	ldi	r25, 0x20	; 32
     32e:	69 2e       	mov	r6, r25
     330:	80 2f       	mov	r24, r16
     332:	8c 70       	andi	r24, 0x0C	; 12
     334:	99 f1       	breq	.+102    	; 0x39c <vfprintf+0x1f4>
     336:	66 20       	and	r6, r6
     338:	11 f0       	breq	.+4      	; 0x33e <vfprintf+0x196>
     33a:	84 e0       	ldi	r24, 0x04	; 4
     33c:	01 c0       	rjmp	.+2      	; 0x340 <vfprintf+0x198>
     33e:	83 e0       	ldi	r24, 0x03	; 3
     340:	85 15       	cp	r24, r5
     342:	10 f0       	brcs	.+4      	; 0x348 <vfprintf+0x1a0>
     344:	51 2c       	mov	r5, r1
     346:	0b c0       	rjmp	.+22     	; 0x35e <vfprintf+0x1b6>
     348:	58 1a       	sub	r5, r24
     34a:	73 fc       	sbrc	r7, 3
     34c:	08 c0       	rjmp	.+16     	; 0x35e <vfprintf+0x1b6>
     34e:	b7 01       	movw	r22, r14
     350:	80 e2       	ldi	r24, 0x20	; 32
     352:	90 e0       	ldi	r25, 0x00	; 0
     354:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     358:	5a 94       	dec	r5
     35a:	c9 f7       	brne	.-14     	; 0x34e <vfprintf+0x1a6>
     35c:	f3 cf       	rjmp	.-26     	; 0x344 <vfprintf+0x19c>
     35e:	66 20       	and	r6, r6
     360:	29 f0       	breq	.+10     	; 0x36c <vfprintf+0x1c4>
     362:	b7 01       	movw	r22, r14
     364:	86 2d       	mov	r24, r6
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     36c:	03 fd       	sbrc	r16, 3
     36e:	03 c0       	rjmp	.+6      	; 0x376 <vfprintf+0x1ce>
     370:	0c e6       	ldi	r16, 0x6C	; 108
     372:	10 e0       	ldi	r17, 0x00	; 0
     374:	02 c0       	rjmp	.+4      	; 0x37a <vfprintf+0x1d2>
     376:	08 e6       	ldi	r16, 0x68	; 104
     378:	10 e0       	ldi	r17, 0x00	; 0
     37a:	f7 2d       	mov	r31, r7
     37c:	f0 71       	andi	r31, 0x10	; 16
     37e:	7f 2e       	mov	r7, r31
     380:	f8 01       	movw	r30, r16
     382:	84 91       	lpm	r24, Z
     384:	88 23       	and	r24, r24
     386:	09 f4       	brne	.+2      	; 0x38a <vfprintf+0x1e2>
     388:	76 c2       	rjmp	.+1260   	; 0x876 <vfprintf+0x6ce>
     38a:	71 10       	cpse	r7, r1
     38c:	80 52       	subi	r24, 0x20	; 32
     38e:	b7 01       	movw	r22, r14
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     396:	0f 5f       	subi	r16, 0xFF	; 255
     398:	1f 4f       	sbci	r17, 0xFF	; 255
     39a:	f2 cf       	rjmp	.-28     	; 0x380 <vfprintf+0x1d8>
     39c:	77 fe       	sbrs	r7, 7
     39e:	0f c0       	rjmp	.+30     	; 0x3be <vfprintf+0x216>
     3a0:	4c 0c       	add	r4, r12
     3a2:	04 ff       	sbrs	r16, 4
     3a4:	04 c0       	rjmp	.+8      	; 0x3ae <vfprintf+0x206>
     3a6:	8a 81       	ldd	r24, Y+2	; 0x02
     3a8:	81 33       	cpi	r24, 0x31	; 49
     3aa:	09 f4       	brne	.+2      	; 0x3ae <vfprintf+0x206>
     3ac:	4a 94       	dec	r4
     3ae:	14 14       	cp	r1, r4
     3b0:	74 f5       	brge	.+92     	; 0x40e <vfprintf+0x266>
     3b2:	f8 e0       	ldi	r31, 0x08	; 8
     3b4:	f4 15       	cp	r31, r4
     3b6:	78 f5       	brcc	.+94     	; 0x416 <vfprintf+0x26e>
     3b8:	88 e0       	ldi	r24, 0x08	; 8
     3ba:	48 2e       	mov	r4, r24
     3bc:	2c c0       	rjmp	.+88     	; 0x416 <vfprintf+0x26e>
     3be:	76 fc       	sbrc	r7, 6
     3c0:	2a c0       	rjmp	.+84     	; 0x416 <vfprintf+0x26e>
     3c2:	81 2f       	mov	r24, r17
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	8c 15       	cp	r24, r12
     3c8:	9d 05       	cpc	r25, r13
     3ca:	9c f0       	brlt	.+38     	; 0x3f2 <vfprintf+0x24a>
     3cc:	6c ef       	ldi	r22, 0xFC	; 252
     3ce:	c6 16       	cp	r12, r22
     3d0:	6f ef       	ldi	r22, 0xFF	; 255
     3d2:	d6 06       	cpc	r13, r22
     3d4:	74 f0       	brlt	.+28     	; 0x3f2 <vfprintf+0x24a>
     3d6:	77 2d       	mov	r23, r7
     3d8:	70 68       	ori	r23, 0x80	; 128
     3da:	77 2e       	mov	r7, r23
     3dc:	0a c0       	rjmp	.+20     	; 0x3f2 <vfprintf+0x24a>
     3de:	e2 e0       	ldi	r30, 0x02	; 2
     3e0:	f0 e0       	ldi	r31, 0x00	; 0
     3e2:	ec 0f       	add	r30, r28
     3e4:	fd 1f       	adc	r31, r29
     3e6:	e1 0f       	add	r30, r17
     3e8:	f1 1d       	adc	r31, r1
     3ea:	80 81       	ld	r24, Z
     3ec:	80 33       	cpi	r24, 0x30	; 48
     3ee:	19 f4       	brne	.+6      	; 0x3f6 <vfprintf+0x24e>
     3f0:	11 50       	subi	r17, 0x01	; 1
     3f2:	11 11       	cpse	r17, r1
     3f4:	f4 cf       	rjmp	.-24     	; 0x3de <vfprintf+0x236>
     3f6:	77 fe       	sbrs	r7, 7
     3f8:	0e c0       	rjmp	.+28     	; 0x416 <vfprintf+0x26e>
     3fa:	44 24       	eor	r4, r4
     3fc:	43 94       	inc	r4
     3fe:	41 0e       	add	r4, r17
     400:	81 2f       	mov	r24, r17
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	c8 16       	cp	r12, r24
     406:	d9 06       	cpc	r13, r25
     408:	2c f4       	brge	.+10     	; 0x414 <vfprintf+0x26c>
     40a:	1c 19       	sub	r17, r12
     40c:	04 c0       	rjmp	.+8      	; 0x416 <vfprintf+0x26e>
     40e:	44 24       	eor	r4, r4
     410:	43 94       	inc	r4
     412:	01 c0       	rjmp	.+2      	; 0x416 <vfprintf+0x26e>
     414:	10 e0       	ldi	r17, 0x00	; 0
     416:	77 fe       	sbrs	r7, 7
     418:	07 c0       	rjmp	.+14     	; 0x428 <vfprintf+0x280>
     41a:	1c 14       	cp	r1, r12
     41c:	1d 04       	cpc	r1, r13
     41e:	3c f4       	brge	.+14     	; 0x42e <vfprintf+0x286>
     420:	96 01       	movw	r18, r12
     422:	2f 5f       	subi	r18, 0xFF	; 255
     424:	3f 4f       	sbci	r19, 0xFF	; 255
     426:	05 c0       	rjmp	.+10     	; 0x432 <vfprintf+0x28a>
     428:	25 e0       	ldi	r18, 0x05	; 5
     42a:	30 e0       	ldi	r19, 0x00	; 0
     42c:	02 c0       	rjmp	.+4      	; 0x432 <vfprintf+0x28a>
     42e:	21 e0       	ldi	r18, 0x01	; 1
     430:	30 e0       	ldi	r19, 0x00	; 0
     432:	66 20       	and	r6, r6
     434:	11 f0       	breq	.+4      	; 0x43a <vfprintf+0x292>
     436:	2f 5f       	subi	r18, 0xFF	; 255
     438:	3f 4f       	sbci	r19, 0xFF	; 255
     43a:	11 23       	and	r17, r17
     43c:	31 f0       	breq	.+12     	; 0x44a <vfprintf+0x2a2>
     43e:	41 2f       	mov	r20, r17
     440:	50 e0       	ldi	r21, 0x00	; 0
     442:	4f 5f       	subi	r20, 0xFF	; 255
     444:	5f 4f       	sbci	r21, 0xFF	; 255
     446:	24 0f       	add	r18, r20
     448:	35 1f       	adc	r19, r21
     44a:	45 2d       	mov	r20, r5
     44c:	50 e0       	ldi	r21, 0x00	; 0
     44e:	24 17       	cp	r18, r20
     450:	35 07       	cpc	r19, r21
     452:	14 f4       	brge	.+4      	; 0x458 <vfprintf+0x2b0>
     454:	52 1a       	sub	r5, r18
     456:	01 c0       	rjmp	.+2      	; 0x45a <vfprintf+0x2b2>
     458:	51 2c       	mov	r5, r1
     45a:	87 2d       	mov	r24, r7
     45c:	89 70       	andi	r24, 0x09	; 9
     45e:	49 f4       	brne	.+18     	; 0x472 <vfprintf+0x2ca>
     460:	55 20       	and	r5, r5
     462:	39 f0       	breq	.+14     	; 0x472 <vfprintf+0x2ca>
     464:	b7 01       	movw	r22, r14
     466:	80 e2       	ldi	r24, 0x20	; 32
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     46e:	5a 94       	dec	r5
     470:	f7 cf       	rjmp	.-18     	; 0x460 <vfprintf+0x2b8>
     472:	66 20       	and	r6, r6
     474:	29 f0       	breq	.+10     	; 0x480 <vfprintf+0x2d8>
     476:	b7 01       	movw	r22, r14
     478:	86 2d       	mov	r24, r6
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     480:	73 fc       	sbrc	r7, 3
     482:	09 c0       	rjmp	.+18     	; 0x496 <vfprintf+0x2ee>
     484:	55 20       	and	r5, r5
     486:	39 f0       	breq	.+14     	; 0x496 <vfprintf+0x2ee>
     488:	b7 01       	movw	r22, r14
     48a:	80 e3       	ldi	r24, 0x30	; 48
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     492:	5a 94       	dec	r5
     494:	f7 cf       	rjmp	.-18     	; 0x484 <vfprintf+0x2dc>
     496:	77 fe       	sbrs	r7, 7
     498:	5f c0       	rjmp	.+190    	; 0x558 <vfprintf+0x3b0>
     49a:	9c 2d       	mov	r25, r12
     49c:	8d 2d       	mov	r24, r13
     49e:	d7 fe       	sbrs	r13, 7
     4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <vfprintf+0x2fe>
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	69 2e       	mov	r6, r25
     4a8:	78 2e       	mov	r7, r24
     4aa:	40 e0       	ldi	r20, 0x00	; 0
     4ac:	50 e0       	ldi	r21, 0x00	; 0
     4ae:	c6 01       	movw	r24, r12
     4b0:	84 19       	sub	r24, r4
     4b2:	91 09       	sbc	r25, r1
     4b4:	9d 87       	std	Y+13, r25	; 0x0d
     4b6:	8c 87       	std	Y+12, r24	; 0x0c
     4b8:	96 01       	movw	r18, r12
     4ba:	26 19       	sub	r18, r6
     4bc:	37 09       	sbc	r19, r7
     4be:	28 0d       	add	r18, r8
     4c0:	39 1d       	adc	r19, r9
     4c2:	81 2f       	mov	r24, r17
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	ee 27       	eor	r30, r30
     4c8:	ff 27       	eor	r31, r31
     4ca:	e8 1b       	sub	r30, r24
     4cc:	f9 0b       	sbc	r31, r25
     4ce:	ff 87       	std	Y+15, r31	; 0x0f
     4d0:	ee 87       	std	Y+14, r30	; 0x0e
     4d2:	ff ef       	ldi	r31, 0xFF	; 255
     4d4:	6f 16       	cp	r6, r31
     4d6:	7f 06       	cpc	r7, r31
     4d8:	69 f4       	brne	.+26     	; 0x4f4 <vfprintf+0x34c>
     4da:	b7 01       	movw	r22, r14
     4dc:	8e e2       	ldi	r24, 0x2E	; 46
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	2b 8b       	std	Y+19, r18	; 0x13
     4e2:	3a 8b       	std	Y+18, r19	; 0x12
     4e4:	48 8b       	std	Y+16, r20	; 0x10
     4e6:	59 8b       	std	Y+17, r21	; 0x11
     4e8:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     4ec:	59 89       	ldd	r21, Y+17	; 0x11
     4ee:	48 89       	ldd	r20, Y+16	; 0x10
     4f0:	3a 89       	ldd	r19, Y+18	; 0x12
     4f2:	2b 89       	ldd	r18, Y+19	; 0x13
     4f4:	c6 14       	cp	r12, r6
     4f6:	d7 04       	cpc	r13, r7
     4f8:	54 f0       	brlt	.+20     	; 0x50e <vfprintf+0x366>
     4fa:	6c 85       	ldd	r22, Y+12	; 0x0c
     4fc:	7d 85       	ldd	r23, Y+13	; 0x0d
     4fe:	66 15       	cp	r22, r6
     500:	77 05       	cpc	r23, r7
     502:	2c f4       	brge	.+10     	; 0x50e <vfprintf+0x366>
     504:	f9 01       	movw	r30, r18
     506:	e4 0f       	add	r30, r20
     508:	f5 1f       	adc	r31, r21
     50a:	81 81       	ldd	r24, Z+1	; 0x01
     50c:	01 c0       	rjmp	.+2      	; 0x510 <vfprintf+0x368>
     50e:	80 e3       	ldi	r24, 0x30	; 48
     510:	71 e0       	ldi	r23, 0x01	; 1
     512:	67 1a       	sub	r6, r23
     514:	71 08       	sbc	r7, r1
     516:	4f 5f       	subi	r20, 0xFF	; 255
     518:	5f 4f       	sbci	r21, 0xFF	; 255
     51a:	ee 85       	ldd	r30, Y+14	; 0x0e
     51c:	ff 85       	ldd	r31, Y+15	; 0x0f
     51e:	6e 16       	cp	r6, r30
     520:	7f 06       	cpc	r7, r31
     522:	6c f0       	brlt	.+26     	; 0x53e <vfprintf+0x396>
     524:	b7 01       	movw	r22, r14
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	2b 8b       	std	Y+19, r18	; 0x13
     52a:	3a 8b       	std	Y+18, r19	; 0x12
     52c:	48 8b       	std	Y+16, r20	; 0x10
     52e:	59 8b       	std	Y+17, r21	; 0x11
     530:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     534:	2b 89       	ldd	r18, Y+19	; 0x13
     536:	3a 89       	ldd	r19, Y+18	; 0x12
     538:	48 89       	ldd	r20, Y+16	; 0x10
     53a:	59 89       	ldd	r21, Y+17	; 0x11
     53c:	ca cf       	rjmp	.-108    	; 0x4d2 <vfprintf+0x32a>
     53e:	6c 14       	cp	r6, r12
     540:	7d 04       	cpc	r7, r13
     542:	39 f4       	brne	.+14     	; 0x552 <vfprintf+0x3aa>
     544:	9a 81       	ldd	r25, Y+2	; 0x02
     546:	96 33       	cpi	r25, 0x36	; 54
     548:	18 f4       	brcc	.+6      	; 0x550 <vfprintf+0x3a8>
     54a:	95 33       	cpi	r25, 0x35	; 53
     54c:	11 f4       	brne	.+4      	; 0x552 <vfprintf+0x3aa>
     54e:	04 ff       	sbrs	r16, 4
     550:	81 e3       	ldi	r24, 0x31	; 49
     552:	b7 01       	movw	r22, r14
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	4b c0       	rjmp	.+150    	; 0x5ee <vfprintf+0x446>
     558:	8a 81       	ldd	r24, Y+2	; 0x02
     55a:	81 33       	cpi	r24, 0x31	; 49
     55c:	09 f0       	breq	.+2      	; 0x560 <vfprintf+0x3b8>
     55e:	0f 7e       	andi	r16, 0xEF	; 239
     560:	b7 01       	movw	r22, r14
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     568:	11 11       	cpse	r17, r1
     56a:	05 c0       	rjmp	.+10     	; 0x576 <vfprintf+0x3ce>
     56c:	74 fe       	sbrs	r7, 4
     56e:	18 c0       	rjmp	.+48     	; 0x5a0 <vfprintf+0x3f8>
     570:	85 e4       	ldi	r24, 0x45	; 69
     572:	90 e0       	ldi	r25, 0x00	; 0
     574:	17 c0       	rjmp	.+46     	; 0x5a4 <vfprintf+0x3fc>
     576:	b7 01       	movw	r22, r14
     578:	8e e2       	ldi	r24, 0x2E	; 46
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     580:	82 e0       	ldi	r24, 0x02	; 2
     582:	66 24       	eor	r6, r6
     584:	63 94       	inc	r6
     586:	68 0e       	add	r6, r24
     588:	f4 01       	movw	r30, r8
     58a:	e8 0f       	add	r30, r24
     58c:	f1 1d       	adc	r31, r1
     58e:	80 81       	ld	r24, Z
     590:	b7 01       	movw	r22, r14
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     598:	11 50       	subi	r17, 0x01	; 1
     59a:	41 f3       	breq	.-48     	; 0x56c <vfprintf+0x3c4>
     59c:	86 2d       	mov	r24, r6
     59e:	f1 cf       	rjmp	.-30     	; 0x582 <vfprintf+0x3da>
     5a0:	85 e6       	ldi	r24, 0x65	; 101
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	b7 01       	movw	r22, r14
     5a6:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     5aa:	d7 fc       	sbrc	r13, 7
     5ac:	05 c0       	rjmp	.+10     	; 0x5b8 <vfprintf+0x410>
     5ae:	c1 14       	cp	r12, r1
     5b0:	d1 04       	cpc	r13, r1
     5b2:	39 f4       	brne	.+14     	; 0x5c2 <vfprintf+0x41a>
     5b4:	04 ff       	sbrs	r16, 4
     5b6:	05 c0       	rjmp	.+10     	; 0x5c2 <vfprintf+0x41a>
     5b8:	d1 94       	neg	r13
     5ba:	c1 94       	neg	r12
     5bc:	d1 08       	sbc	r13, r1
     5be:	8d e2       	ldi	r24, 0x2D	; 45
     5c0:	01 c0       	rjmp	.+2      	; 0x5c4 <vfprintf+0x41c>
     5c2:	8b e2       	ldi	r24, 0x2B	; 43
     5c4:	b7 01       	movw	r22, r14
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     5cc:	80 e3       	ldi	r24, 0x30	; 48
     5ce:	6a e0       	ldi	r22, 0x0A	; 10
     5d0:	c6 16       	cp	r12, r22
     5d2:	d1 04       	cpc	r13, r1
     5d4:	2c f0       	brlt	.+10     	; 0x5e0 <vfprintf+0x438>
     5d6:	8f 5f       	subi	r24, 0xFF	; 255
     5d8:	fa e0       	ldi	r31, 0x0A	; 10
     5da:	cf 1a       	sub	r12, r31
     5dc:	d1 08       	sbc	r13, r1
     5de:	f7 cf       	rjmp	.-18     	; 0x5ce <vfprintf+0x426>
     5e0:	b7 01       	movw	r22, r14
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     5e8:	b7 01       	movw	r22, r14
     5ea:	c6 01       	movw	r24, r12
     5ec:	c0 96       	adiw	r24, 0x30	; 48
     5ee:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     5f2:	41 c1       	rjmp	.+642    	; 0x876 <vfprintf+0x6ce>
     5f4:	83 36       	cpi	r24, 0x63	; 99
     5f6:	31 f0       	breq	.+12     	; 0x604 <vfprintf+0x45c>
     5f8:	83 37       	cpi	r24, 0x73	; 115
     5fa:	79 f0       	breq	.+30     	; 0x61a <vfprintf+0x472>
     5fc:	83 35       	cpi	r24, 0x53	; 83
     5fe:	09 f0       	breq	.+2      	; 0x602 <vfprintf+0x45a>
     600:	58 c0       	rjmp	.+176    	; 0x6b2 <vfprintf+0x50a>
     602:	21 c0       	rjmp	.+66     	; 0x646 <vfprintf+0x49e>
     604:	56 01       	movw	r10, r12
     606:	72 e0       	ldi	r23, 0x02	; 2
     608:	a7 0e       	add	r10, r23
     60a:	b1 1c       	adc	r11, r1
     60c:	f6 01       	movw	r30, r12
     60e:	80 81       	ld	r24, Z
     610:	89 83       	std	Y+1, r24	; 0x01
     612:	01 e0       	ldi	r16, 0x01	; 1
     614:	10 e0       	ldi	r17, 0x00	; 0
     616:	64 01       	movw	r12, r8
     618:	14 c0       	rjmp	.+40     	; 0x642 <vfprintf+0x49a>
     61a:	56 01       	movw	r10, r12
     61c:	f2 e0       	ldi	r31, 0x02	; 2
     61e:	af 0e       	add	r10, r31
     620:	b1 1c       	adc	r11, r1
     622:	f6 01       	movw	r30, r12
     624:	c0 80       	ld	r12, Z
     626:	d1 80       	ldd	r13, Z+1	; 0x01
     628:	26 ff       	sbrs	r18, 6
     62a:	03 c0       	rjmp	.+6      	; 0x632 <vfprintf+0x48a>
     62c:	61 2f       	mov	r22, r17
     62e:	70 e0       	ldi	r23, 0x00	; 0
     630:	02 c0       	rjmp	.+4      	; 0x636 <vfprintf+0x48e>
     632:	6f ef       	ldi	r22, 0xFF	; 255
     634:	7f ef       	ldi	r23, 0xFF	; 255
     636:	c6 01       	movw	r24, r12
     638:	2b 8b       	std	Y+19, r18	; 0x13
     63a:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <strnlen>
     63e:	8c 01       	movw	r16, r24
     640:	2b 89       	ldd	r18, Y+19	; 0x13
     642:	2f 77       	andi	r18, 0x7F	; 127
     644:	15 c0       	rjmp	.+42     	; 0x670 <vfprintf+0x4c8>
     646:	56 01       	movw	r10, r12
     648:	f2 e0       	ldi	r31, 0x02	; 2
     64a:	af 0e       	add	r10, r31
     64c:	b1 1c       	adc	r11, r1
     64e:	f6 01       	movw	r30, r12
     650:	c0 80       	ld	r12, Z
     652:	d1 80       	ldd	r13, Z+1	; 0x01
     654:	26 ff       	sbrs	r18, 6
     656:	03 c0       	rjmp	.+6      	; 0x65e <vfprintf+0x4b6>
     658:	61 2f       	mov	r22, r17
     65a:	70 e0       	ldi	r23, 0x00	; 0
     65c:	02 c0       	rjmp	.+4      	; 0x662 <vfprintf+0x4ba>
     65e:	6f ef       	ldi	r22, 0xFF	; 255
     660:	7f ef       	ldi	r23, 0xFF	; 255
     662:	c6 01       	movw	r24, r12
     664:	2b 8b       	std	Y+19, r18	; 0x13
     666:	0e 94 e6 08 	call	0x11cc	; 0x11cc <strnlen_P>
     66a:	8c 01       	movw	r16, r24
     66c:	2b 89       	ldd	r18, Y+19	; 0x13
     66e:	20 68       	ori	r18, 0x80	; 128
     670:	72 2e       	mov	r7, r18
     672:	23 fd       	sbrc	r18, 3
     674:	1a c0       	rjmp	.+52     	; 0x6aa <vfprintf+0x502>
     676:	85 2d       	mov	r24, r5
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	08 17       	cp	r16, r24
     67c:	19 07       	cpc	r17, r25
     67e:	a8 f4       	brcc	.+42     	; 0x6aa <vfprintf+0x502>
     680:	b7 01       	movw	r22, r14
     682:	80 e2       	ldi	r24, 0x20	; 32
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     68a:	5a 94       	dec	r5
     68c:	f4 cf       	rjmp	.-24     	; 0x676 <vfprintf+0x4ce>
     68e:	f6 01       	movw	r30, r12
     690:	77 fc       	sbrc	r7, 7
     692:	85 91       	lpm	r24, Z+
     694:	77 fe       	sbrs	r7, 7
     696:	81 91       	ld	r24, Z+
     698:	6f 01       	movw	r12, r30
     69a:	b7 01       	movw	r22, r14
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     6a2:	51 10       	cpse	r5, r1
     6a4:	5a 94       	dec	r5
     6a6:	01 50       	subi	r16, 0x01	; 1
     6a8:	11 09       	sbc	r17, r1
     6aa:	01 15       	cp	r16, r1
     6ac:	11 05       	cpc	r17, r1
     6ae:	79 f7       	brne	.-34     	; 0x68e <vfprintf+0x4e6>
     6b0:	e2 c0       	rjmp	.+452    	; 0x876 <vfprintf+0x6ce>
     6b2:	84 36       	cpi	r24, 0x64	; 100
     6b4:	11 f0       	breq	.+4      	; 0x6ba <vfprintf+0x512>
     6b6:	89 36       	cpi	r24, 0x69	; 105
     6b8:	51 f5       	brne	.+84     	; 0x70e <vfprintf+0x566>
     6ba:	56 01       	movw	r10, r12
     6bc:	27 ff       	sbrs	r18, 7
     6be:	09 c0       	rjmp	.+18     	; 0x6d2 <vfprintf+0x52a>
     6c0:	f4 e0       	ldi	r31, 0x04	; 4
     6c2:	af 0e       	add	r10, r31
     6c4:	b1 1c       	adc	r11, r1
     6c6:	f6 01       	movw	r30, r12
     6c8:	60 81       	ld	r22, Z
     6ca:	71 81       	ldd	r23, Z+1	; 0x01
     6cc:	82 81       	ldd	r24, Z+2	; 0x02
     6ce:	93 81       	ldd	r25, Z+3	; 0x03
     6d0:	0a c0       	rjmp	.+20     	; 0x6e6 <vfprintf+0x53e>
     6d2:	f2 e0       	ldi	r31, 0x02	; 2
     6d4:	af 0e       	add	r10, r31
     6d6:	b1 1c       	adc	r11, r1
     6d8:	f6 01       	movw	r30, r12
     6da:	60 81       	ld	r22, Z
     6dc:	71 81       	ldd	r23, Z+1	; 0x01
     6de:	88 27       	eor	r24, r24
     6e0:	77 fd       	sbrc	r23, 7
     6e2:	80 95       	com	r24
     6e4:	98 2f       	mov	r25, r24
     6e6:	02 2f       	mov	r16, r18
     6e8:	0f 76       	andi	r16, 0x6F	; 111
     6ea:	97 ff       	sbrs	r25, 7
     6ec:	08 c0       	rjmp	.+16     	; 0x6fe <vfprintf+0x556>
     6ee:	90 95       	com	r25
     6f0:	80 95       	com	r24
     6f2:	70 95       	com	r23
     6f4:	61 95       	neg	r22
     6f6:	7f 4f       	sbci	r23, 0xFF	; 255
     6f8:	8f 4f       	sbci	r24, 0xFF	; 255
     6fa:	9f 4f       	sbci	r25, 0xFF	; 255
     6fc:	00 68       	ori	r16, 0x80	; 128
     6fe:	2a e0       	ldi	r18, 0x0A	; 10
     700:	30 e0       	ldi	r19, 0x00	; 0
     702:	a4 01       	movw	r20, r8
     704:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__ultoa_invert>
     708:	c8 2e       	mov	r12, r24
     70a:	c8 18       	sub	r12, r8
     70c:	3e c0       	rjmp	.+124    	; 0x78a <vfprintf+0x5e2>
     70e:	02 2f       	mov	r16, r18
     710:	85 37       	cpi	r24, 0x75	; 117
     712:	21 f4       	brne	.+8      	; 0x71c <vfprintf+0x574>
     714:	0f 7e       	andi	r16, 0xEF	; 239
     716:	2a e0       	ldi	r18, 0x0A	; 10
     718:	30 e0       	ldi	r19, 0x00	; 0
     71a:	1d c0       	rjmp	.+58     	; 0x756 <vfprintf+0x5ae>
     71c:	09 7f       	andi	r16, 0xF9	; 249
     71e:	8f 36       	cpi	r24, 0x6F	; 111
     720:	91 f0       	breq	.+36     	; 0x746 <vfprintf+0x59e>
     722:	18 f4       	brcc	.+6      	; 0x72a <vfprintf+0x582>
     724:	88 35       	cpi	r24, 0x58	; 88
     726:	59 f0       	breq	.+22     	; 0x73e <vfprintf+0x596>
     728:	b0 c0       	rjmp	.+352    	; 0x88a <vfprintf+0x6e2>
     72a:	80 37       	cpi	r24, 0x70	; 112
     72c:	19 f0       	breq	.+6      	; 0x734 <vfprintf+0x58c>
     72e:	88 37       	cpi	r24, 0x78	; 120
     730:	11 f0       	breq	.+4      	; 0x736 <vfprintf+0x58e>
     732:	ab c0       	rjmp	.+342    	; 0x88a <vfprintf+0x6e2>
     734:	00 61       	ori	r16, 0x10	; 16
     736:	04 ff       	sbrs	r16, 4
     738:	09 c0       	rjmp	.+18     	; 0x74c <vfprintf+0x5a4>
     73a:	04 60       	ori	r16, 0x04	; 4
     73c:	07 c0       	rjmp	.+14     	; 0x74c <vfprintf+0x5a4>
     73e:	24 ff       	sbrs	r18, 4
     740:	08 c0       	rjmp	.+16     	; 0x752 <vfprintf+0x5aa>
     742:	06 60       	ori	r16, 0x06	; 6
     744:	06 c0       	rjmp	.+12     	; 0x752 <vfprintf+0x5aa>
     746:	28 e0       	ldi	r18, 0x08	; 8
     748:	30 e0       	ldi	r19, 0x00	; 0
     74a:	05 c0       	rjmp	.+10     	; 0x756 <vfprintf+0x5ae>
     74c:	20 e1       	ldi	r18, 0x10	; 16
     74e:	30 e0       	ldi	r19, 0x00	; 0
     750:	02 c0       	rjmp	.+4      	; 0x756 <vfprintf+0x5ae>
     752:	20 e1       	ldi	r18, 0x10	; 16
     754:	32 e0       	ldi	r19, 0x02	; 2
     756:	56 01       	movw	r10, r12
     758:	07 ff       	sbrs	r16, 7
     75a:	09 c0       	rjmp	.+18     	; 0x76e <vfprintf+0x5c6>
     75c:	f4 e0       	ldi	r31, 0x04	; 4
     75e:	af 0e       	add	r10, r31
     760:	b1 1c       	adc	r11, r1
     762:	f6 01       	movw	r30, r12
     764:	60 81       	ld	r22, Z
     766:	71 81       	ldd	r23, Z+1	; 0x01
     768:	82 81       	ldd	r24, Z+2	; 0x02
     76a:	93 81       	ldd	r25, Z+3	; 0x03
     76c:	08 c0       	rjmp	.+16     	; 0x77e <vfprintf+0x5d6>
     76e:	f2 e0       	ldi	r31, 0x02	; 2
     770:	af 0e       	add	r10, r31
     772:	b1 1c       	adc	r11, r1
     774:	f6 01       	movw	r30, r12
     776:	60 81       	ld	r22, Z
     778:	71 81       	ldd	r23, Z+1	; 0x01
     77a:	80 e0       	ldi	r24, 0x00	; 0
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	a4 01       	movw	r20, r8
     780:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__ultoa_invert>
     784:	c8 2e       	mov	r12, r24
     786:	c8 18       	sub	r12, r8
     788:	0f 77       	andi	r16, 0x7F	; 127
     78a:	06 ff       	sbrs	r16, 6
     78c:	0b c0       	rjmp	.+22     	; 0x7a4 <vfprintf+0x5fc>
     78e:	20 2f       	mov	r18, r16
     790:	2e 7f       	andi	r18, 0xFE	; 254
     792:	c1 16       	cp	r12, r17
     794:	50 f4       	brcc	.+20     	; 0x7aa <vfprintf+0x602>
     796:	04 ff       	sbrs	r16, 4
     798:	0a c0       	rjmp	.+20     	; 0x7ae <vfprintf+0x606>
     79a:	02 fd       	sbrc	r16, 2
     79c:	08 c0       	rjmp	.+16     	; 0x7ae <vfprintf+0x606>
     79e:	20 2f       	mov	r18, r16
     7a0:	2e 7e       	andi	r18, 0xEE	; 238
     7a2:	05 c0       	rjmp	.+10     	; 0x7ae <vfprintf+0x606>
     7a4:	dc 2c       	mov	r13, r12
     7a6:	20 2f       	mov	r18, r16
     7a8:	03 c0       	rjmp	.+6      	; 0x7b0 <vfprintf+0x608>
     7aa:	dc 2c       	mov	r13, r12
     7ac:	01 c0       	rjmp	.+2      	; 0x7b0 <vfprintf+0x608>
     7ae:	d1 2e       	mov	r13, r17
     7b0:	24 ff       	sbrs	r18, 4
     7b2:	0d c0       	rjmp	.+26     	; 0x7ce <vfprintf+0x626>
     7b4:	fe 01       	movw	r30, r28
     7b6:	ec 0d       	add	r30, r12
     7b8:	f1 1d       	adc	r31, r1
     7ba:	80 81       	ld	r24, Z
     7bc:	80 33       	cpi	r24, 0x30	; 48
     7be:	11 f4       	brne	.+4      	; 0x7c4 <vfprintf+0x61c>
     7c0:	29 7e       	andi	r18, 0xE9	; 233
     7c2:	09 c0       	rjmp	.+18     	; 0x7d6 <vfprintf+0x62e>
     7c4:	22 ff       	sbrs	r18, 2
     7c6:	06 c0       	rjmp	.+12     	; 0x7d4 <vfprintf+0x62c>
     7c8:	d3 94       	inc	r13
     7ca:	d3 94       	inc	r13
     7cc:	04 c0       	rjmp	.+8      	; 0x7d6 <vfprintf+0x62e>
     7ce:	82 2f       	mov	r24, r18
     7d0:	86 78       	andi	r24, 0x86	; 134
     7d2:	09 f0       	breq	.+2      	; 0x7d6 <vfprintf+0x62e>
     7d4:	d3 94       	inc	r13
     7d6:	23 fd       	sbrc	r18, 3
     7d8:	13 c0       	rjmp	.+38     	; 0x800 <vfprintf+0x658>
     7da:	20 ff       	sbrs	r18, 0
     7dc:	06 c0       	rjmp	.+12     	; 0x7ea <vfprintf+0x642>
     7de:	1c 2d       	mov	r17, r12
     7e0:	d5 14       	cp	r13, r5
     7e2:	18 f4       	brcc	.+6      	; 0x7ea <vfprintf+0x642>
     7e4:	15 0d       	add	r17, r5
     7e6:	1d 19       	sub	r17, r13
     7e8:	d5 2c       	mov	r13, r5
     7ea:	d5 14       	cp	r13, r5
     7ec:	68 f4       	brcc	.+26     	; 0x808 <vfprintf+0x660>
     7ee:	b7 01       	movw	r22, r14
     7f0:	80 e2       	ldi	r24, 0x20	; 32
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	2b 8b       	std	Y+19, r18	; 0x13
     7f6:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     7fa:	d3 94       	inc	r13
     7fc:	2b 89       	ldd	r18, Y+19	; 0x13
     7fe:	f5 cf       	rjmp	.-22     	; 0x7ea <vfprintf+0x642>
     800:	d5 14       	cp	r13, r5
     802:	10 f4       	brcc	.+4      	; 0x808 <vfprintf+0x660>
     804:	5d 18       	sub	r5, r13
     806:	01 c0       	rjmp	.+2      	; 0x80a <vfprintf+0x662>
     808:	51 2c       	mov	r5, r1
     80a:	24 ff       	sbrs	r18, 4
     80c:	12 c0       	rjmp	.+36     	; 0x832 <vfprintf+0x68a>
     80e:	b7 01       	movw	r22, r14
     810:	80 e3       	ldi	r24, 0x30	; 48
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	2b 8b       	std	Y+19, r18	; 0x13
     816:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     81a:	2b 89       	ldd	r18, Y+19	; 0x13
     81c:	22 ff       	sbrs	r18, 2
     81e:	17 c0       	rjmp	.+46     	; 0x84e <vfprintf+0x6a6>
     820:	21 ff       	sbrs	r18, 1
     822:	03 c0       	rjmp	.+6      	; 0x82a <vfprintf+0x682>
     824:	88 e5       	ldi	r24, 0x58	; 88
     826:	90 e0       	ldi	r25, 0x00	; 0
     828:	02 c0       	rjmp	.+4      	; 0x82e <vfprintf+0x686>
     82a:	88 e7       	ldi	r24, 0x78	; 120
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	b7 01       	movw	r22, r14
     830:	0c c0       	rjmp	.+24     	; 0x84a <vfprintf+0x6a2>
     832:	82 2f       	mov	r24, r18
     834:	86 78       	andi	r24, 0x86	; 134
     836:	59 f0       	breq	.+22     	; 0x84e <vfprintf+0x6a6>
     838:	21 fd       	sbrc	r18, 1
     83a:	02 c0       	rjmp	.+4      	; 0x840 <vfprintf+0x698>
     83c:	80 e2       	ldi	r24, 0x20	; 32
     83e:	01 c0       	rjmp	.+2      	; 0x842 <vfprintf+0x69a>
     840:	8b e2       	ldi	r24, 0x2B	; 43
     842:	27 fd       	sbrc	r18, 7
     844:	8d e2       	ldi	r24, 0x2D	; 45
     846:	b7 01       	movw	r22, r14
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     84e:	c1 16       	cp	r12, r17
     850:	38 f4       	brcc	.+14     	; 0x860 <vfprintf+0x6b8>
     852:	b7 01       	movw	r22, r14
     854:	80 e3       	ldi	r24, 0x30	; 48
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     85c:	11 50       	subi	r17, 0x01	; 1
     85e:	f7 cf       	rjmp	.-18     	; 0x84e <vfprintf+0x6a6>
     860:	ca 94       	dec	r12
     862:	f4 01       	movw	r30, r8
     864:	ec 0d       	add	r30, r12
     866:	f1 1d       	adc	r31, r1
     868:	80 81       	ld	r24, Z
     86a:	b7 01       	movw	r22, r14
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     872:	c1 10       	cpse	r12, r1
     874:	f5 cf       	rjmp	.-22     	; 0x860 <vfprintf+0x6b8>
     876:	55 20       	and	r5, r5
     878:	09 f4       	brne	.+2      	; 0x87c <vfprintf+0x6d4>
     87a:	c2 cc       	rjmp	.-1660   	; 0x200 <vfprintf+0x58>
     87c:	b7 01       	movw	r22, r14
     87e:	80 e2       	ldi	r24, 0x20	; 32
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     886:	5a 94       	dec	r5
     888:	f6 cf       	rjmp	.-20     	; 0x876 <vfprintf+0x6ce>
     88a:	f7 01       	movw	r30, r14
     88c:	86 81       	ldd	r24, Z+6	; 0x06
     88e:	97 81       	ldd	r25, Z+7	; 0x07
     890:	02 c0       	rjmp	.+4      	; 0x896 <vfprintf+0x6ee>
     892:	8f ef       	ldi	r24, 0xFF	; 255
     894:	9f ef       	ldi	r25, 0xFF	; 255
     896:	63 96       	adiw	r28, 0x13	; 19
     898:	e2 e1       	ldi	r30, 0x12	; 18
     89a:	0c 94 9a 06 	jmp	0xd34	; 0xd34 <__epilogue_restores__>

0000089e <adcInit>:

#include "adc.h"

void adcInit(uint8_t channel) {
	//Make ADC5 an input pin
	DDRC &= ~(1 << channel);
     89e:	97 b1       	in	r25, 0x07	; 7
     8a0:	21 e0       	ldi	r18, 0x01	; 1
     8a2:	30 e0       	ldi	r19, 0x00	; 0
     8a4:	01 c0       	rjmp	.+2      	; 0x8a8 <adcInit+0xa>
     8a6:	22 0f       	add	r18, r18
     8a8:	8a 95       	dec	r24
     8aa:	ea f7       	brpl	.-6      	; 0x8a6 <adcInit+0x8>
     8ac:	20 95       	com	r18
     8ae:	29 23       	and	r18, r25
     8b0:	27 b9       	out	0x07, r18	; 7

	//Connect channel 5 to ADC (AD5 pin)
	ADMUX |= ((1 << MUX2) | (1 << MUX0));
     8b2:	ec e7       	ldi	r30, 0x7C	; 124
     8b4:	f0 e0       	ldi	r31, 0x00	; 0
     8b6:	80 81       	ld	r24, Z
     8b8:	85 60       	ori	r24, 0x05	; 5
     8ba:	80 83       	st	Z, r24

	//use AVcc as ref voltage
	ADMUX |= (1 << REFS0);
     8bc:	80 81       	ld	r24, Z
     8be:	80 64       	ori	r24, 0x40	; 64
     8c0:	80 83       	st	Z, r24

	//8 bit result
	//ADMUX |= (1 << ADLAR);

	//128 prescale = 125kHz ADC clock
	ADCSRA |= ((1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2));
     8c2:	ea e7       	ldi	r30, 0x7A	; 122
     8c4:	f0 e0       	ldi	r31, 0x00	; 0
     8c6:	80 81       	ld	r24, Z
     8c8:	87 60       	ori	r24, 0x07	; 7
     8ca:	80 83       	st	Z, r24

	//switch on ADC
	ADCSRA |= (1 << ADEN);
     8cc:	80 81       	ld	r24, Z
     8ce:	80 68       	ori	r24, 0x80	; 128
     8d0:	80 83       	st	Z, r24
     8d2:	08 95       	ret

000008d4 <adcRead>:
}

uint16_t adcRead(void) {
	uint16_t adcResult;
	//start conversion
	ADCSRA |= (1 << ADSC);
     8d4:	80 91 7a 00 	lds	r24, 0x007A
     8d8:	80 64       	ori	r24, 0x40	; 64
     8da:	80 93 7a 00 	sts	0x007A, r24

	//wait for ADC to complete
	//wait until ADSC bit goes low
	while (ADCSRA & (1 << ADSC)) {
     8de:	80 91 7a 00 	lds	r24, 0x007A
     8e2:	86 fd       	sbrc	r24, 6
     8e4:	fc cf       	rjmp	.-8      	; 0x8de <adcRead+0xa>

	}

	//ADC is complete - grab result...
	adcResult = ADC;
     8e6:	80 91 78 00 	lds	r24, 0x0078
     8ea:	90 91 79 00 	lds	r25, 0x0079
	return adcResult;
}
     8ee:	08 95       	ret

000008f0 <dbg_putchar>:
#define DBG_UART_TX_NUM_ADD_NOP		((F_CPU/DBG_UART_BAUDRATE-16)%4)
	uint8_t sreg;
	uint16_t tmp;
	uint8_t numiter = 10;

	sreg = SREG;
     8f0:	2f b7       	in	r18, 0x3f	; 63
	cli();
     8f2:	f8 94       	cli

	asm volatile (
     8f4:	9a e0       	ldi	r25, 0x0A	; 10
     8f6:	e5 b1       	in	r30, 0x05	; 5
     8f8:	ee 7f       	andi	r30, 0xFE	; 254
     8fa:	e5 b9       	out	0x05, r30	; 5
	...
     904:	00 00       	nop
     906:	ed e9       	ldi	r30, 0x9D	; 157
     908:	f1 e0       	ldi	r31, 0x01	; 1
     90a:	31 97       	sbiw	r30, 0x01	; 1
     90c:	f1 f7       	brne	.-4      	; 0x90a <__stack+0xb>
     90e:	00 00       	nop
     910:	00 00       	nop
     912:	e5 b1       	in	r30, 0x05	; 5
     914:	80 fd       	sbrc	r24, 0
     916:	e1 60       	ori	r30, 0x01	; 1
     918:	80 ff       	sbrs	r24, 0
     91a:	ee 7f       	andi	r30, 0xFE	; 254
     91c:	e5 b9       	out	0x05, r30	; 5
     91e:	08 94       	sec
     920:	87 95       	ror	r24
     922:	9a 95       	dec	r25
     924:	81 f7       	brne	.-32     	; 0x906 <__stack+0x7>
		  "M" (1<<DBG_UART_TX_PIN),
		  "i" (DBG_UART_TX_NUM_DELAY_CYCLES),
		  "1" (c),			/* data */
		  "2" (numiter)
	);
	SREG = sreg;
     926:	2f bf       	out	0x3f, r18	; 63
     928:	08 95       	ret

0000092a <dbg_putStr>:
#include "dbg_putchar.h"

#if DBG_UART_ENABLE

void dbg_putStr(char string[])
{
     92a:	1f 93       	push	r17
     92c:	cf 93       	push	r28
     92e:	df 93       	push	r29
     930:	ec 01       	movw	r28, r24
	uint8_t i = 0;

	while(string[i] != '\0')
     932:	88 81       	ld	r24, Y
     934:	88 23       	and	r24, r24
     936:	51 f0       	breq	.+20     	; 0x94c <dbg_putStr+0x22>

#if DBG_UART_ENABLE

void dbg_putStr(char string[])
{
	uint8_t i = 0;
     938:	10 e0       	ldi	r17, 0x00	; 0

	while(string[i] != '\0')
	{
		dbg_putchar(string[i++]);
     93a:	1f 5f       	subi	r17, 0xFF	; 255
     93c:	0e 94 78 04 	call	0x8f0	; 0x8f0 <dbg_putchar>

void dbg_putStr(char string[])
{
	uint8_t i = 0;

	while(string[i] != '\0')
     940:	fe 01       	movw	r30, r28
     942:	e1 0f       	add	r30, r17
     944:	f1 1d       	adc	r31, r1
     946:	80 81       	ld	r24, Z
     948:	81 11       	cpse	r24, r1
     94a:	f7 cf       	rjmp	.-18     	; 0x93a <dbg_putStr+0x10>
	{
		dbg_putchar(string[i++]);
	}
}
     94c:	df 91       	pop	r29
     94e:	cf 91       	pop	r28
     950:	1f 91       	pop	r17
     952:	08 95       	ret

00000954 <snocCmd>:

	}

}

void snocCmd(char cmdStr[]) {
     954:	ff 92       	push	r15
     956:	0f 93       	push	r16
     958:	1f 93       	push	r17
     95a:	cf 93       	push	r28
     95c:	df 93       	push	r29
     95e:	cd b7       	in	r28, 0x3d	; 61
     960:	de b7       	in	r29, 0x3e	; 62
     962:	64 97       	sbiw	r28, 0x14	; 20
     964:	0f b6       	in	r0, 0x3f	; 63
     966:	f8 94       	cli
     968:	de bf       	out	0x3e, r29	; 62
     96a:	0f be       	out	0x3f, r0	; 63
     96c:	cd bf       	out	0x3d, r28	; 61
     96e:	8c 01       	movw	r16, r24
	char rxStr[20];
	uint8_t rxIndex = 0;
	uint8_t newLineReceived = 0;

	dbg_putStr(cmdStr);
     970:	0e 94 95 04 	call	0x92a	; 0x92a <dbg_putStr>
	usartSendString(cmdStr);
     974:	c8 01       	movw	r24, r16
     976:	0e 94 62 06 	call	0xcc4	; 0xcc4 <usartSendString>
	rxIndex = 0;
     97a:	f1 2c       	mov	r15, r1

	while (!newLineReceived) {

		while (!usartCharReceived()) {
     97c:	0e 94 75 06 	call	0xcea	; 0xcea <usartCharReceived>
     980:	88 23       	and	r24, r24
     982:	e1 f3       	breq	.-8      	; 0x97c <snocCmd+0x28>

		}

		rxStr[rxIndex] = usartReadChar();
     984:	0f 2d       	mov	r16, r15
     986:	10 e0       	ldi	r17, 0x00	; 0
     988:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <usartReadChar>
		if (rxStr[rxIndex] == '\n') {
			newLineReceived = 1;
			rxStr[rxIndex] = '\0';
     98c:	e1 e0       	ldi	r30, 0x01	; 1
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	ec 0f       	add	r30, r28
     992:	fd 1f       	adc	r31, r29
     994:	e0 0f       	add	r30, r16
     996:	f1 1f       	adc	r31, r17
		while (!usartCharReceived()) {

		}

		rxStr[rxIndex] = usartReadChar();
		if (rxStr[rxIndex] == '\n') {
     998:	8a 30       	cpi	r24, 0x0A	; 10
     99a:	19 f0       	breq	.+6      	; 0x9a2 <snocCmd+0x4e>

		while (!usartCharReceived()) {

		}

		rxStr[rxIndex] = usartReadChar();
     99c:	80 83       	st	Z, r24
		if (rxStr[rxIndex] == '\n') {
			newLineReceived = 1;
			rxStr[rxIndex] = '\0';
		} else {
			rxIndex++;
     99e:	f3 94       	inc	r15
     9a0:	ed cf       	rjmp	.-38     	; 0x97c <snocCmd+0x28>
		}

		rxStr[rxIndex] = usartReadChar();
		if (rxStr[rxIndex] == '\n') {
			newLineReceived = 1;
			rxStr[rxIndex] = '\0';
     9a2:	10 82       	st	Z, r1
		} else {
			rxIndex++;
		}
	}
	usartSendString(rxStr);
     9a4:	ce 01       	movw	r24, r28
     9a6:	01 96       	adiw	r24, 0x01	; 1
     9a8:	0e 94 62 06 	call	0xcc4	; 0xcc4 <usartSendString>
}
     9ac:	64 96       	adiw	r28, 0x14	; 20
     9ae:	0f b6       	in	r0, 0x3f	; 63
     9b0:	f8 94       	cli
     9b2:	de bf       	out	0x3e, r29	; 62
     9b4:	0f be       	out	0x3f, r0	; 63
     9b6:	cd bf       	out	0x3d, r28	; 61
     9b8:	df 91       	pop	r29
     9ba:	cf 91       	pop	r28
     9bc:	1f 91       	pop	r17
     9be:	0f 91       	pop	r16
     9c0:	ff 90       	pop	r15
     9c2:	08 95       	ret

000009c4 <main>:
void snocCmd(char cmdStr[]);

int main(void) {

	//enable pull-up on INT-0 pin(PD2)
	DDRD &= ~(1 << INTERRUPT_PIN);
     9c4:	52 98       	cbi	0x0a, 2	; 10
	PORTD |= (1 << INTERRUPT_PIN);
     9c6:	5a 9a       	sbi	0x0b, 2	; 11

	//configure for falling edge of IRQ
	EICRA |= (1 << ISC01);
     9c8:	80 91 69 00 	lds	r24, 0x0069
     9cc:	82 60       	ori	r24, 0x02	; 2
     9ce:	80 93 69 00 	sts	0x0069, r24

	//enable INT0
	EIMSK |= (1 << INT0);
     9d2:	e8 9a       	sbi	0x1d, 0	; 29

	//enable global INTs - 1 in I-bit of SREG
	sei();
     9d4:	78 94       	sei

	usartInit();
     9d6:	0e 94 49 06 	call	0xc92	; 0xc92 <usartInit>
	dbg_tx_init();
     9da:	28 9a       	sbi	0x05, 0	; 5
     9dc:	20 9a       	sbi	0x04, 0	; 4
	millisInit();
     9de:	0e 94 27 06 	call	0xc4e	; 0xc4e <millisInit>
	adcInit(ADC_CHANNEL);
     9e2:	85 e0       	ldi	r24, 0x05	; 5
     9e4:	0e 94 4f 04 	call	0x89e	; 0x89e <adcInit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9e8:	2f ef       	ldi	r18, 0xFF	; 255
     9ea:	83 ed       	ldi	r24, 0xD3	; 211
     9ec:	90 e3       	ldi	r25, 0x30	; 48
     9ee:	21 50       	subi	r18, 0x01	; 1
     9f0:	80 40       	sbci	r24, 0x00	; 0
     9f2:	90 40       	sbci	r25, 0x00	; 0
     9f4:	e1 f7       	brne	.-8      	; 0x9ee <main+0x2a>
     9f6:	00 c0       	rjmp	.+0      	; 0x9f8 <main+0x34>
     9f8:	00 00       	nop

	//adding a delay before sending AT commands
	_delay_ms(1000);

	snocCmd("AT\n");
     9fa:	80 e0       	ldi	r24, 0x00	; 0
     9fc:	91 e0       	ldi	r25, 0x01	; 1
     9fe:	0e 94 aa 04 	call	0x954	; 0x954 <snocCmd>
	snocCmd("AT\n");
     a02:	80 e0       	ldi	r24, 0x00	; 0
     a04:	91 e0       	ldi	r25, 0x01	; 1
     a06:	0e 94 aa 04 	call	0x954	; 0x954 <snocCmd>
	snocCmd("AT\n");
     a0a:	80 e0       	ldi	r24, 0x00	; 0
     a0c:	91 e0       	ldi	r25, 0x01	; 1
     a0e:	0e 94 aa 04 	call	0x954	; 0x954 <snocCmd>

	while (1) {
		sleep_mode(); //CPU stops executing
     a12:	83 b7       	in	r24, 0x33	; 51
     a14:	81 60       	ori	r24, 0x01	; 1
     a16:	83 bf       	out	0x33, r24	; 51
     a18:	88 95       	sleep
     a1a:	83 b7       	in	r24, 0x33	; 51
     a1c:	8e 7f       	andi	r24, 0xFE	; 254
     a1e:	83 bf       	out	0x33, r24	; 51
     a20:	f8 cf       	rjmp	.-16     	; 0xa12 <main+0x4e>

00000a22 <__vector_1>:
	}
	usartSendString(rxStr);
}


ISR(INT0_vect) {
     a22:	1f 92       	push	r1
     a24:	0f 92       	push	r0
     a26:	0f b6       	in	r0, 0x3f	; 63
     a28:	0f 92       	push	r0
     a2a:	11 24       	eor	r1, r1
     a2c:	8f 92       	push	r8
     a2e:	9f 92       	push	r9
     a30:	af 92       	push	r10
     a32:	bf 92       	push	r11
     a34:	cf 92       	push	r12
     a36:	df 92       	push	r13
     a38:	ef 92       	push	r14
     a3a:	ff 92       	push	r15
     a3c:	0f 93       	push	r16
     a3e:	1f 93       	push	r17
     a40:	2f 93       	push	r18
     a42:	3f 93       	push	r19
     a44:	4f 93       	push	r20
     a46:	5f 93       	push	r21
     a48:	6f 93       	push	r22
     a4a:	7f 93       	push	r23
     a4c:	8f 93       	push	r24
     a4e:	9f 93       	push	r25
     a50:	af 93       	push	r26
     a52:	bf 93       	push	r27
     a54:	ef 93       	push	r30
     a56:	ff 93       	push	r31
     a58:	cf 93       	push	r28
     a5a:	df 93       	push	r29
     a5c:	cd b7       	in	r28, 0x3d	; 61
     a5e:	de b7       	in	r29, 0x3e	; 62
     a60:	c6 54       	subi	r28, 0x46	; 70
     a62:	d1 09       	sbc	r29, r1
     a64:	de bf       	out	0x3e, r29	; 62
     a66:	cd bf       	out	0x3d, r28	; 61

	static uint32_t currentTime, lastISRRunTime = 0;
	currentTime = millis();
     a68:	0e 94 3e 06 	call	0xc7c	; 0xc7c <millis>
     a6c:	60 93 1e 01 	sts	0x011E, r22
     a70:	70 93 1f 01 	sts	0x011F, r23
     a74:	80 93 20 01 	sts	0x0120, r24
     a78:	90 93 21 01 	sts	0x0121, r25

	if (currentTime - lastISRRunTime >= TIME_DELAY) {
     a7c:	00 91 1a 01 	lds	r16, 0x011A
     a80:	10 91 1b 01 	lds	r17, 0x011B
     a84:	20 91 1c 01 	lds	r18, 0x011C
     a88:	30 91 1d 01 	lds	r19, 0x011D
     a8c:	dc 01       	movw	r26, r24
     a8e:	cb 01       	movw	r24, r22
     a90:	80 1b       	sub	r24, r16
     a92:	91 0b       	sbc	r25, r17
     a94:	a2 0b       	sbc	r26, r18
     a96:	b3 0b       	sbc	r27, r19
     a98:	44 97       	sbiw	r24, 0x14	; 20
     a9a:	a1 05       	cpc	r26, r1
     a9c:	b1 05       	cpc	r27, r1
     a9e:	a0 f0       	brcs	.+40     	; 0xac8 <__vector_1+0xa6>

		//clear EIFR flag in case of bounce
		if (EIFR & (1 << INTF0)) {
     aa0:	e0 99       	sbic	0x1c, 0	; 28
			EIFR |= (1 << INTF0);
     aa2:	e0 9a       	sbi	0x1c, 0	; 28
		}

		if (!(PIND & (1 << 2))) { //PD2 (INT0) is low
     aa4:	4a 9b       	sbis	0x09, 2	; 9
     aa6:	34 c0       	rjmp	.+104    	; 0xb10 <__vector_1+0xee>
			}

			sprintf(finalCommand, "AT$SF=%s\n", outword);
			snocCmd(finalCommand);
		}
		lastISRRunTime  = currentTime;
     aa8:	80 91 1e 01 	lds	r24, 0x011E
     aac:	90 91 1f 01 	lds	r25, 0x011F
     ab0:	a0 91 20 01 	lds	r26, 0x0120
     ab4:	b0 91 21 01 	lds	r27, 0x0121
     ab8:	80 93 1a 01 	sts	0x011A, r24
     abc:	90 93 1b 01 	sts	0x011B, r25
     ac0:	a0 93 1c 01 	sts	0x011C, r26
     ac4:	b0 93 1d 01 	sts	0x011D, r27
	}
}
     ac8:	ca 5b       	subi	r28, 0xBA	; 186
     aca:	df 4f       	sbci	r29, 0xFF	; 255
     acc:	0f b6       	in	r0, 0x3f	; 63
     ace:	f8 94       	cli
     ad0:	de bf       	out	0x3e, r29	; 62
     ad2:	0f be       	out	0x3f, r0	; 63
     ad4:	cd bf       	out	0x3d, r28	; 61
     ad6:	df 91       	pop	r29
     ad8:	cf 91       	pop	r28
     ada:	ff 91       	pop	r31
     adc:	ef 91       	pop	r30
     ade:	bf 91       	pop	r27
     ae0:	af 91       	pop	r26
     ae2:	9f 91       	pop	r25
     ae4:	8f 91       	pop	r24
     ae6:	7f 91       	pop	r23
     ae8:	6f 91       	pop	r22
     aea:	5f 91       	pop	r21
     aec:	4f 91       	pop	r20
     aee:	3f 91       	pop	r19
     af0:	2f 91       	pop	r18
     af2:	1f 91       	pop	r17
     af4:	0f 91       	pop	r16
     af6:	ff 90       	pop	r15
     af8:	ef 90       	pop	r14
     afa:	df 90       	pop	r13
     afc:	cf 90       	pop	r12
     afe:	bf 90       	pop	r11
     b00:	af 90       	pop	r10
     b02:	9f 90       	pop	r9
     b04:	8f 90       	pop	r8
     b06:	0f 90       	pop	r0
     b08:	0f be       	out	0x3f, r0	; 63
     b0a:	0f 90       	pop	r0
     b0c:	1f 90       	pop	r1
     b0e:	18 95       	reti

		if (!(PIND & (1 << 2))) { //PD2 (INT0) is low
			char myTempStr[17], outword[33], finalCommand[20]; //17:16+1, 33:16*2+1
			double currentTemp;
			uint16_t adcValue;
			adcValue = adcRead();
     b10:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <adcRead>
			currentTemp = ((5.0 / 1024) * adcValue) / 0.01; //((refVolt/steps)*code)/10mV = degree temp
     b14:	bc 01       	movw	r22, r24
     b16:	80 e0       	ldi	r24, 0x00	; 0
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	0e 94 1d 07 	call	0xe3a	; 0xe3a <__floatunsisf>
     b1e:	20 e0       	ldi	r18, 0x00	; 0
     b20:	30 e0       	ldi	r19, 0x00	; 0
     b22:	40 ea       	ldi	r20, 0xA0	; 160
     b24:	5b e3       	ldi	r21, 0x3B	; 59
     b26:	0e 94 ab 07 	call	0xf56	; 0xf56 <__mulsf3>
     b2a:	2a e0       	ldi	r18, 0x0A	; 10
     b2c:	37 ed       	ldi	r19, 0xD7	; 215
     b2e:	43 e2       	ldi	r20, 0x23	; 35
     b30:	5c e3       	ldi	r21, 0x3C	; 60
     b32:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__divsf3>
			sprintf(myTempStr, "%.2lf", currentTemp);
     b36:	9f 93       	push	r25
     b38:	8f 93       	push	r24
     b3a:	7f 93       	push	r23
     b3c:	6f 93       	push	r22
     b3e:	84 e0       	ldi	r24, 0x04	; 4
     b40:	91 e0       	ldi	r25, 0x01	; 1
     b42:	9f 93       	push	r25
     b44:	8f 93       	push	r24
     b46:	7e 01       	movw	r14, r28
     b48:	26 e3       	ldi	r18, 0x36	; 54
     b4a:	e2 0e       	add	r14, r18
     b4c:	f1 1c       	adc	r15, r1
     b4e:	ff 92       	push	r15
     b50:	ef 92       	push	r14
     b52:	0e 94 2e 09 	call	0x125c	; 0x125c <sprintf>
			int len = strlen(myTempStr);
     b56:	f7 01       	movw	r30, r14
     b58:	01 90       	ld	r0, Z+
     b5a:	00 20       	and	r0, r0
     b5c:	e9 f7       	brne	.-6      	; 0xb58 <__vector_1+0x136>
     b5e:	31 97       	sbiw	r30, 0x01	; 1
     b60:	ee 19       	sub	r30, r14
     b62:	ff 09       	sbc	r31, r15
			if (myTempStr[len - 1] == '\n')
     b64:	cf 01       	movw	r24, r30
     b66:	01 97       	sbiw	r24, 0x01	; 1
     b68:	d7 01       	movw	r26, r14
     b6a:	a8 0f       	add	r26, r24
     b6c:	b9 1f       	adc	r27, r25
     b6e:	0f b6       	in	r0, 0x3f	; 63
     b70:	f8 94       	cli
     b72:	de bf       	out	0x3e, r29	; 62
     b74:	0f be       	out	0x3f, r0	; 63
     b76:	cd bf       	out	0x3d, r28	; 61
     b78:	2c 91       	ld	r18, X
     b7a:	2a 30       	cpi	r18, 0x0A	; 10
     b7c:	e1 f1       	breq	.+120    	; 0xbf6 <__vector_1+0x1d4>
				myTempStr[--len] = '\0';

			for (int i = 0; i < len; i++) {
     b7e:	1e 16       	cp	r1, r30
     b80:	1f 06       	cpc	r1, r31
     b82:	e4 f5       	brge	.+120    	; 0xbfc <__vector_1+0x1da>
     b84:	9e 01       	movw	r18, r28
     b86:	2f 5f       	subi	r18, 0xFF	; 255
     b88:	3f 4f       	sbci	r19, 0xFF	; 255
     b8a:	49 01       	movw	r8, r18
     b8c:	89 01       	movw	r16, r18
     b8e:	57 01       	movw	r10, r14
     b90:	ae 0e       	add	r10, r30
     b92:	bf 1e       	adc	r11, r31
				sprintf(outword + i * 2, "%02X", myTempStr[i]);
     b94:	84 e1       	ldi	r24, 0x14	; 20
     b96:	c8 2e       	mov	r12, r24
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	d8 2e       	mov	r13, r24
     b9c:	f7 01       	movw	r30, r14
     b9e:	81 91       	ld	r24, Z+
     ba0:	7f 01       	movw	r14, r30
     ba2:	1f 92       	push	r1
     ba4:	8f 93       	push	r24
     ba6:	df 92       	push	r13
     ba8:	cf 92       	push	r12
     baa:	1f 93       	push	r17
     bac:	0f 93       	push	r16
     bae:	0e 94 2e 09 	call	0x125c	; 0x125c <sprintf>
     bb2:	0e 5f       	subi	r16, 0xFE	; 254
     bb4:	1f 4f       	sbci	r17, 0xFF	; 255
			sprintf(myTempStr, "%.2lf", currentTemp);
			int len = strlen(myTempStr);
			if (myTempStr[len - 1] == '\n')
				myTempStr[--len] = '\0';

			for (int i = 0; i < len; i++) {
     bb6:	0f 90       	pop	r0
     bb8:	0f 90       	pop	r0
     bba:	0f 90       	pop	r0
     bbc:	0f 90       	pop	r0
     bbe:	0f 90       	pop	r0
     bc0:	0f 90       	pop	r0
     bc2:	ea 14       	cp	r14, r10
     bc4:	fb 04       	cpc	r15, r11
     bc6:	51 f7       	brne	.-44     	; 0xb9c <__vector_1+0x17a>
				sprintf(outword + i * 2, "%02X", myTempStr[i]);
			}

			sprintf(finalCommand, "AT$SF=%s\n", outword);
     bc8:	9f 92       	push	r9
     bca:	8f 92       	push	r8
     bcc:	8a e0       	ldi	r24, 0x0A	; 10
     bce:	91 e0       	ldi	r25, 0x01	; 1
     bd0:	9f 93       	push	r25
     bd2:	8f 93       	push	r24
     bd4:	8e 01       	movw	r16, r28
     bd6:	0e 5d       	subi	r16, 0xDE	; 222
     bd8:	1f 4f       	sbci	r17, 0xFF	; 255
     bda:	1f 93       	push	r17
     bdc:	0f 93       	push	r16
     bde:	0e 94 2e 09 	call	0x125c	; 0x125c <sprintf>
			snocCmd(finalCommand);
     be2:	c8 01       	movw	r24, r16
     be4:	0e 94 aa 04 	call	0x954	; 0x954 <snocCmd>
     be8:	0f 90       	pop	r0
     bea:	0f 90       	pop	r0
     bec:	0f 90       	pop	r0
     bee:	0f 90       	pop	r0
     bf0:	0f 90       	pop	r0
     bf2:	0f 90       	pop	r0
     bf4:	59 cf       	rjmp	.-334    	; 0xaa8 <__vector_1+0x86>
			adcValue = adcRead();
			currentTemp = ((5.0 / 1024) * adcValue) / 0.01; //((refVolt/steps)*code)/10mV = degree temp
			sprintf(myTempStr, "%.2lf", currentTemp);
			int len = strlen(myTempStr);
			if (myTempStr[len - 1] == '\n')
				myTempStr[--len] = '\0';
     bf6:	1c 92       	st	X, r1
     bf8:	fc 01       	movw	r30, r24
     bfa:	c1 cf       	rjmp	.-126    	; 0xb7e <__vector_1+0x15c>
     bfc:	ce 01       	movw	r24, r28
     bfe:	01 96       	adiw	r24, 0x01	; 1
     c00:	4c 01       	movw	r8, r24
     c02:	e2 cf       	rjmp	.-60     	; 0xbc8 <__vector_1+0x1a6>

00000c04 <__vector_14>:
static uint32_t elapsedMillis;

/*
 *ISR for timer compare register
 */
ISR(TIMER0_COMPA_vect) {
     c04:	1f 92       	push	r1
     c06:	0f 92       	push	r0
     c08:	0f b6       	in	r0, 0x3f	; 63
     c0a:	0f 92       	push	r0
     c0c:	11 24       	eor	r1, r1
     c0e:	8f 93       	push	r24
     c10:	9f 93       	push	r25
     c12:	af 93       	push	r26
     c14:	bf 93       	push	r27
	//static variable in isr 'lastISRRunTime'. if diff is less than 20ms , do nothing
	elapsedMillis++;
     c16:	80 91 22 01 	lds	r24, 0x0122
     c1a:	90 91 23 01 	lds	r25, 0x0123
     c1e:	a0 91 24 01 	lds	r26, 0x0124
     c22:	b0 91 25 01 	lds	r27, 0x0125
     c26:	01 96       	adiw	r24, 0x01	; 1
     c28:	a1 1d       	adc	r26, r1
     c2a:	b1 1d       	adc	r27, r1
     c2c:	80 93 22 01 	sts	0x0122, r24
     c30:	90 93 23 01 	sts	0x0123, r25
     c34:	a0 93 24 01 	sts	0x0124, r26
     c38:	b0 93 25 01 	sts	0x0125, r27
}
     c3c:	bf 91       	pop	r27
     c3e:	af 91       	pop	r26
     c40:	9f 91       	pop	r25
     c42:	8f 91       	pop	r24
     c44:	0f 90       	pop	r0
     c46:	0f be       	out	0x3f, r0	; 63
     c48:	0f 90       	pop	r0
     c4a:	1f 90       	pop	r1
     c4c:	18 95       	reti

00000c4e <millisInit>:
 * Load the OCR0A with the correct value
 * Initialise elapsedMillis to zero.
 * Set correct prescale and start timer.
 */
void millisInit(void) {
	elapsedMillis=0;
     c4e:	10 92 22 01 	sts	0x0122, r1
     c52:	10 92 23 01 	sts	0x0123, r1
     c56:	10 92 24 01 	sts	0x0124, r1
     c5a:	10 92 25 01 	sts	0x0125, r1
	TCCR0A |= (1 << WGM01); // Configure timer 0 for CTC mode
     c5e:	84 b5       	in	r24, 0x24	; 36
     c60:	82 60       	ori	r24, 0x02	; 2
     c62:	84 bd       	out	0x24, r24	; 36
	TIMSK0 |= (1 << OCIE0A); // Enable CTC interrupt
     c64:	ee e6       	ldi	r30, 0x6E	; 110
     c66:	f0 e0       	ldi	r31, 0x00	; 0
     c68:	80 81       	ld	r24, Z
     c6a:	82 60       	ori	r24, 0x02	; 2
     c6c:	80 83       	st	Z, r24
	sei();// Enable global interrupts
     c6e:	78 94       	sei
	OCR0A = 249; // Set CTC compare value to 1000Hz at 16 MHz AVR clock , with a prescaler of 64
     c70:	89 ef       	ldi	r24, 0xF9	; 249
     c72:	87 bd       	out	0x27, r24	; 39
	TCCR0B |= ((1 << CS01) | (1 << CS00)); // Start timer at Fcpu /64
     c74:	85 b5       	in	r24, 0x25	; 37
     c76:	83 60       	ori	r24, 0x03	; 3
     c78:	85 bd       	out	0x25, r24	; 37
     c7a:	08 95       	ret

00000c7c <millis>:
	 * uint32_t elapsedMillis count variable?
	 * Do you need to do anything to ensure this function works correctly in
	 * that case?
	 */
	 uint32_t localmillis;
	 cli();
     c7c:	f8 94       	cli
	 localmillis = elapsedMillis;
     c7e:	60 91 22 01 	lds	r22, 0x0122
     c82:	70 91 23 01 	lds	r23, 0x0123
     c86:	80 91 24 01 	lds	r24, 0x0124
     c8a:	90 91 25 01 	lds	r25, 0x0125
	 sei();
     c8e:	78 94       	sei
	 return localmillis;
}
     c90:	08 95       	ret

00000c92 <usartInit>:

#include "usart.h"

void usartInit(void)
{
	UCSR0B |= ((1<<RXEN0) | (1<<TXEN0));
     c92:	e1 ec       	ldi	r30, 0xC1	; 193
     c94:	f0 e0       	ldi	r31, 0x00	; 0
     c96:	80 81       	ld	r24, Z
     c98:	88 61       	ori	r24, 0x18	; 24
     c9a:	80 83       	st	Z, r24

	UBRR0 = 0x68;
     c9c:	88 e6       	ldi	r24, 0x68	; 104
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	90 93 c5 00 	sts	0x00C5, r25
     ca4:	80 93 c4 00 	sts	0x00C4, r24
     ca8:	08 95       	ret

00000caa <usartEnableRxInt>:
}

void usartEnableRxInt(void)
{
	UCSR0B |= (1<<RXCIE0);
     caa:	e1 ec       	ldi	r30, 0xC1	; 193
     cac:	f0 e0       	ldi	r31, 0x00	; 0
     cae:	80 81       	ld	r24, Z
     cb0:	80 68       	ori	r24, 0x80	; 128
     cb2:	80 83       	st	Z, r24
     cb4:	08 95       	ret

00000cb6 <usartSendChar>:
}

void usartSendChar(char c)
{
	while ((UCSR0A & (1 << UDRE0)) == 0) {}; // Do nothing until UDR is ready for more data to be written to it
     cb6:	90 91 c0 00 	lds	r25, 0x00C0
     cba:	95 ff       	sbrs	r25, 5
     cbc:	fc cf       	rjmp	.-8      	; 0xcb6 <usartSendChar>
	UDR0 = c;
     cbe:	80 93 c6 00 	sts	0x00C6, r24
     cc2:	08 95       	ret

00000cc4 <usartSendString>:

void usartSendString(char string[])
{
	uint8_t i = 0;

	while(string[i] != '\0')
     cc4:	fc 01       	movw	r30, r24
     cc6:	30 81       	ld	r19, Z
     cc8:	33 23       	and	r19, r19
     cca:	71 f0       	breq	.+28     	; 0xce8 <usartSendString+0x24>
	UDR0 = c;
}

void usartSendString(char string[])
{
	uint8_t i = 0;
     ccc:	40 e0       	ldi	r20, 0x00	; 0

	while(string[i] != '\0')
	{
		usartSendChar(string[i++]);
     cce:	4f 5f       	subi	r20, 0xFF	; 255
	UCSR0B |= (1<<RXCIE0);
}

void usartSendChar(char c)
{
	while ((UCSR0A & (1 << UDRE0)) == 0) {}; // Do nothing until UDR is ready for more data to be written to it
     cd0:	20 91 c0 00 	lds	r18, 0x00C0
     cd4:	25 ff       	sbrs	r18, 5
     cd6:	fc cf       	rjmp	.-8      	; 0xcd0 <usartSendString+0xc>
	UDR0 = c;
     cd8:	30 93 c6 00 	sts	0x00C6, r19

void usartSendString(char string[])
{
	uint8_t i = 0;

	while(string[i] != '\0')
     cdc:	fc 01       	movw	r30, r24
     cde:	e4 0f       	add	r30, r20
     ce0:	f1 1d       	adc	r31, r1
     ce2:	30 81       	ld	r19, Z
     ce4:	31 11       	cpse	r19, r1
     ce6:	f3 cf       	rjmp	.-26     	; 0xcce <usartSendString+0xa>
     ce8:	08 95       	ret

00000cea <usartCharReceived>:

uint8_t usartCharReceived(void)
{
	uint8_t retVal = 0;

	if(UCSR0A & (1 << RXC0))
     cea:	80 91 c0 00 	lds	r24, 0x00C0
	{
		retVal = 1;
	}

	return retVal;
}
     cee:	88 1f       	adc	r24, r24
     cf0:	88 27       	eor	r24, r24
     cf2:	88 1f       	adc	r24, r24
     cf4:	08 95       	ret

00000cf6 <usartReadChar>:

char usartReadChar(void)
{
	return UDR0;
     cf6:	80 91 c6 00 	lds	r24, 0x00C6
}
     cfa:	08 95       	ret

00000cfc <__prologue_saves__>:
     cfc:	2f 92       	push	r2
     cfe:	3f 92       	push	r3
     d00:	4f 92       	push	r4
     d02:	5f 92       	push	r5
     d04:	6f 92       	push	r6
     d06:	7f 92       	push	r7
     d08:	8f 92       	push	r8
     d0a:	9f 92       	push	r9
     d0c:	af 92       	push	r10
     d0e:	bf 92       	push	r11
     d10:	cf 92       	push	r12
     d12:	df 92       	push	r13
     d14:	ef 92       	push	r14
     d16:	ff 92       	push	r15
     d18:	0f 93       	push	r16
     d1a:	1f 93       	push	r17
     d1c:	cf 93       	push	r28
     d1e:	df 93       	push	r29
     d20:	cd b7       	in	r28, 0x3d	; 61
     d22:	de b7       	in	r29, 0x3e	; 62
     d24:	ca 1b       	sub	r28, r26
     d26:	db 0b       	sbc	r29, r27
     d28:	0f b6       	in	r0, 0x3f	; 63
     d2a:	f8 94       	cli
     d2c:	de bf       	out	0x3e, r29	; 62
     d2e:	0f be       	out	0x3f, r0	; 63
     d30:	cd bf       	out	0x3d, r28	; 61
     d32:	09 94       	ijmp

00000d34 <__epilogue_restores__>:
     d34:	2a 88       	ldd	r2, Y+18	; 0x12
     d36:	39 88       	ldd	r3, Y+17	; 0x11
     d38:	48 88       	ldd	r4, Y+16	; 0x10
     d3a:	5f 84       	ldd	r5, Y+15	; 0x0f
     d3c:	6e 84       	ldd	r6, Y+14	; 0x0e
     d3e:	7d 84       	ldd	r7, Y+13	; 0x0d
     d40:	8c 84       	ldd	r8, Y+12	; 0x0c
     d42:	9b 84       	ldd	r9, Y+11	; 0x0b
     d44:	aa 84       	ldd	r10, Y+10	; 0x0a
     d46:	b9 84       	ldd	r11, Y+9	; 0x09
     d48:	c8 84       	ldd	r12, Y+8	; 0x08
     d4a:	df 80       	ldd	r13, Y+7	; 0x07
     d4c:	ee 80       	ldd	r14, Y+6	; 0x06
     d4e:	fd 80       	ldd	r15, Y+5	; 0x05
     d50:	0c 81       	ldd	r16, Y+4	; 0x04
     d52:	1b 81       	ldd	r17, Y+3	; 0x03
     d54:	aa 81       	ldd	r26, Y+2	; 0x02
     d56:	b9 81       	ldd	r27, Y+1	; 0x01
     d58:	ce 0f       	add	r28, r30
     d5a:	d1 1d       	adc	r29, r1
     d5c:	0f b6       	in	r0, 0x3f	; 63
     d5e:	f8 94       	cli
     d60:	de bf       	out	0x3e, r29	; 62
     d62:	0f be       	out	0x3f, r0	; 63
     d64:	cd bf       	out	0x3d, r28	; 61
     d66:	ed 01       	movw	r28, r26
     d68:	08 95       	ret

00000d6a <__divsf3>:
     d6a:	0c d0       	rcall	.+24     	; 0xd84 <__divsf3x>
     d6c:	ba c0       	rjmp	.+372    	; 0xee2 <__fp_round>
     d6e:	b2 d0       	rcall	.+356    	; 0xed4 <__fp_pscB>
     d70:	40 f0       	brcs	.+16     	; 0xd82 <__divsf3+0x18>
     d72:	a9 d0       	rcall	.+338    	; 0xec6 <__fp_pscA>
     d74:	30 f0       	brcs	.+12     	; 0xd82 <__divsf3+0x18>
     d76:	21 f4       	brne	.+8      	; 0xd80 <__divsf3+0x16>
     d78:	5f 3f       	cpi	r21, 0xFF	; 255
     d7a:	19 f0       	breq	.+6      	; 0xd82 <__divsf3+0x18>
     d7c:	9b c0       	rjmp	.+310    	; 0xeb4 <__fp_inf>
     d7e:	51 11       	cpse	r21, r1
     d80:	e4 c0       	rjmp	.+456    	; 0xf4a <__fp_szero>
     d82:	9e c0       	rjmp	.+316    	; 0xec0 <__fp_nan>

00000d84 <__divsf3x>:
     d84:	bf d0       	rcall	.+382    	; 0xf04 <__fp_split3>
     d86:	98 f3       	brcs	.-26     	; 0xd6e <__divsf3+0x4>

00000d88 <__divsf3_pse>:
     d88:	99 23       	and	r25, r25
     d8a:	c9 f3       	breq	.-14     	; 0xd7e <__divsf3+0x14>
     d8c:	55 23       	and	r21, r21
     d8e:	b1 f3       	breq	.-20     	; 0xd7c <__divsf3+0x12>
     d90:	95 1b       	sub	r25, r21
     d92:	55 0b       	sbc	r21, r21
     d94:	bb 27       	eor	r27, r27
     d96:	aa 27       	eor	r26, r26
     d98:	62 17       	cp	r22, r18
     d9a:	73 07       	cpc	r23, r19
     d9c:	84 07       	cpc	r24, r20
     d9e:	38 f0       	brcs	.+14     	; 0xdae <__divsf3_pse+0x26>
     da0:	9f 5f       	subi	r25, 0xFF	; 255
     da2:	5f 4f       	sbci	r21, 0xFF	; 255
     da4:	22 0f       	add	r18, r18
     da6:	33 1f       	adc	r19, r19
     da8:	44 1f       	adc	r20, r20
     daa:	aa 1f       	adc	r26, r26
     dac:	a9 f3       	breq	.-22     	; 0xd98 <__divsf3_pse+0x10>
     dae:	33 d0       	rcall	.+102    	; 0xe16 <__divsf3_pse+0x8e>
     db0:	0e 2e       	mov	r0, r30
     db2:	3a f0       	brmi	.+14     	; 0xdc2 <__divsf3_pse+0x3a>
     db4:	e0 e8       	ldi	r30, 0x80	; 128
     db6:	30 d0       	rcall	.+96     	; 0xe18 <__divsf3_pse+0x90>
     db8:	91 50       	subi	r25, 0x01	; 1
     dba:	50 40       	sbci	r21, 0x00	; 0
     dbc:	e6 95       	lsr	r30
     dbe:	00 1c       	adc	r0, r0
     dc0:	ca f7       	brpl	.-14     	; 0xdb4 <__divsf3_pse+0x2c>
     dc2:	29 d0       	rcall	.+82     	; 0xe16 <__divsf3_pse+0x8e>
     dc4:	fe 2f       	mov	r31, r30
     dc6:	27 d0       	rcall	.+78     	; 0xe16 <__divsf3_pse+0x8e>
     dc8:	66 0f       	add	r22, r22
     dca:	77 1f       	adc	r23, r23
     dcc:	88 1f       	adc	r24, r24
     dce:	bb 1f       	adc	r27, r27
     dd0:	26 17       	cp	r18, r22
     dd2:	37 07       	cpc	r19, r23
     dd4:	48 07       	cpc	r20, r24
     dd6:	ab 07       	cpc	r26, r27
     dd8:	b0 e8       	ldi	r27, 0x80	; 128
     dda:	09 f0       	breq	.+2      	; 0xdde <__divsf3_pse+0x56>
     ddc:	bb 0b       	sbc	r27, r27
     dde:	80 2d       	mov	r24, r0
     de0:	bf 01       	movw	r22, r30
     de2:	ff 27       	eor	r31, r31
     de4:	93 58       	subi	r25, 0x83	; 131
     de6:	5f 4f       	sbci	r21, 0xFF	; 255
     de8:	2a f0       	brmi	.+10     	; 0xdf4 <__divsf3_pse+0x6c>
     dea:	9e 3f       	cpi	r25, 0xFE	; 254
     dec:	51 05       	cpc	r21, r1
     dee:	68 f0       	brcs	.+26     	; 0xe0a <__divsf3_pse+0x82>
     df0:	61 c0       	rjmp	.+194    	; 0xeb4 <__fp_inf>
     df2:	ab c0       	rjmp	.+342    	; 0xf4a <__fp_szero>
     df4:	5f 3f       	cpi	r21, 0xFF	; 255
     df6:	ec f3       	brlt	.-6      	; 0xdf2 <__divsf3_pse+0x6a>
     df8:	98 3e       	cpi	r25, 0xE8	; 232
     dfa:	dc f3       	brlt	.-10     	; 0xdf2 <__divsf3_pse+0x6a>
     dfc:	86 95       	lsr	r24
     dfe:	77 95       	ror	r23
     e00:	67 95       	ror	r22
     e02:	b7 95       	ror	r27
     e04:	f7 95       	ror	r31
     e06:	9f 5f       	subi	r25, 0xFF	; 255
     e08:	c9 f7       	brne	.-14     	; 0xdfc <__divsf3_pse+0x74>
     e0a:	88 0f       	add	r24, r24
     e0c:	91 1d       	adc	r25, r1
     e0e:	96 95       	lsr	r25
     e10:	87 95       	ror	r24
     e12:	97 f9       	bld	r25, 7
     e14:	08 95       	ret
     e16:	e1 e0       	ldi	r30, 0x01	; 1
     e18:	66 0f       	add	r22, r22
     e1a:	77 1f       	adc	r23, r23
     e1c:	88 1f       	adc	r24, r24
     e1e:	bb 1f       	adc	r27, r27
     e20:	62 17       	cp	r22, r18
     e22:	73 07       	cpc	r23, r19
     e24:	84 07       	cpc	r24, r20
     e26:	ba 07       	cpc	r27, r26
     e28:	20 f0       	brcs	.+8      	; 0xe32 <__divsf3_pse+0xaa>
     e2a:	62 1b       	sub	r22, r18
     e2c:	73 0b       	sbc	r23, r19
     e2e:	84 0b       	sbc	r24, r20
     e30:	ba 0b       	sbc	r27, r26
     e32:	ee 1f       	adc	r30, r30
     e34:	88 f7       	brcc	.-30     	; 0xe18 <__divsf3_pse+0x90>
     e36:	e0 95       	com	r30
     e38:	08 95       	ret

00000e3a <__floatunsisf>:
     e3a:	e8 94       	clt
     e3c:	09 c0       	rjmp	.+18     	; 0xe50 <__floatsisf+0x12>

00000e3e <__floatsisf>:
     e3e:	97 fb       	bst	r25, 7
     e40:	3e f4       	brtc	.+14     	; 0xe50 <__floatsisf+0x12>
     e42:	90 95       	com	r25
     e44:	80 95       	com	r24
     e46:	70 95       	com	r23
     e48:	61 95       	neg	r22
     e4a:	7f 4f       	sbci	r23, 0xFF	; 255
     e4c:	8f 4f       	sbci	r24, 0xFF	; 255
     e4e:	9f 4f       	sbci	r25, 0xFF	; 255
     e50:	99 23       	and	r25, r25
     e52:	a9 f0       	breq	.+42     	; 0xe7e <__floatsisf+0x40>
     e54:	f9 2f       	mov	r31, r25
     e56:	96 e9       	ldi	r25, 0x96	; 150
     e58:	bb 27       	eor	r27, r27
     e5a:	93 95       	inc	r25
     e5c:	f6 95       	lsr	r31
     e5e:	87 95       	ror	r24
     e60:	77 95       	ror	r23
     e62:	67 95       	ror	r22
     e64:	b7 95       	ror	r27
     e66:	f1 11       	cpse	r31, r1
     e68:	f8 cf       	rjmp	.-16     	; 0xe5a <__floatsisf+0x1c>
     e6a:	fa f4       	brpl	.+62     	; 0xeaa <__floatsisf+0x6c>
     e6c:	bb 0f       	add	r27, r27
     e6e:	11 f4       	brne	.+4      	; 0xe74 <__floatsisf+0x36>
     e70:	60 ff       	sbrs	r22, 0
     e72:	1b c0       	rjmp	.+54     	; 0xeaa <__floatsisf+0x6c>
     e74:	6f 5f       	subi	r22, 0xFF	; 255
     e76:	7f 4f       	sbci	r23, 0xFF	; 255
     e78:	8f 4f       	sbci	r24, 0xFF	; 255
     e7a:	9f 4f       	sbci	r25, 0xFF	; 255
     e7c:	16 c0       	rjmp	.+44     	; 0xeaa <__floatsisf+0x6c>
     e7e:	88 23       	and	r24, r24
     e80:	11 f0       	breq	.+4      	; 0xe86 <__floatsisf+0x48>
     e82:	96 e9       	ldi	r25, 0x96	; 150
     e84:	11 c0       	rjmp	.+34     	; 0xea8 <__floatsisf+0x6a>
     e86:	77 23       	and	r23, r23
     e88:	21 f0       	breq	.+8      	; 0xe92 <__floatsisf+0x54>
     e8a:	9e e8       	ldi	r25, 0x8E	; 142
     e8c:	87 2f       	mov	r24, r23
     e8e:	76 2f       	mov	r23, r22
     e90:	05 c0       	rjmp	.+10     	; 0xe9c <__floatsisf+0x5e>
     e92:	66 23       	and	r22, r22
     e94:	71 f0       	breq	.+28     	; 0xeb2 <__floatsisf+0x74>
     e96:	96 e8       	ldi	r25, 0x86	; 134
     e98:	86 2f       	mov	r24, r22
     e9a:	70 e0       	ldi	r23, 0x00	; 0
     e9c:	60 e0       	ldi	r22, 0x00	; 0
     e9e:	2a f0       	brmi	.+10     	; 0xeaa <__floatsisf+0x6c>
     ea0:	9a 95       	dec	r25
     ea2:	66 0f       	add	r22, r22
     ea4:	77 1f       	adc	r23, r23
     ea6:	88 1f       	adc	r24, r24
     ea8:	da f7       	brpl	.-10     	; 0xea0 <__floatsisf+0x62>
     eaa:	88 0f       	add	r24, r24
     eac:	96 95       	lsr	r25
     eae:	87 95       	ror	r24
     eb0:	97 f9       	bld	r25, 7
     eb2:	08 95       	ret

00000eb4 <__fp_inf>:
     eb4:	97 f9       	bld	r25, 7
     eb6:	9f 67       	ori	r25, 0x7F	; 127
     eb8:	80 e8       	ldi	r24, 0x80	; 128
     eba:	70 e0       	ldi	r23, 0x00	; 0
     ebc:	60 e0       	ldi	r22, 0x00	; 0
     ebe:	08 95       	ret

00000ec0 <__fp_nan>:
     ec0:	9f ef       	ldi	r25, 0xFF	; 255
     ec2:	80 ec       	ldi	r24, 0xC0	; 192
     ec4:	08 95       	ret

00000ec6 <__fp_pscA>:
     ec6:	00 24       	eor	r0, r0
     ec8:	0a 94       	dec	r0
     eca:	16 16       	cp	r1, r22
     ecc:	17 06       	cpc	r1, r23
     ece:	18 06       	cpc	r1, r24
     ed0:	09 06       	cpc	r0, r25
     ed2:	08 95       	ret

00000ed4 <__fp_pscB>:
     ed4:	00 24       	eor	r0, r0
     ed6:	0a 94       	dec	r0
     ed8:	12 16       	cp	r1, r18
     eda:	13 06       	cpc	r1, r19
     edc:	14 06       	cpc	r1, r20
     ede:	05 06       	cpc	r0, r21
     ee0:	08 95       	ret

00000ee2 <__fp_round>:
     ee2:	09 2e       	mov	r0, r25
     ee4:	03 94       	inc	r0
     ee6:	00 0c       	add	r0, r0
     ee8:	11 f4       	brne	.+4      	; 0xeee <__fp_round+0xc>
     eea:	88 23       	and	r24, r24
     eec:	52 f0       	brmi	.+20     	; 0xf02 <__fp_round+0x20>
     eee:	bb 0f       	add	r27, r27
     ef0:	40 f4       	brcc	.+16     	; 0xf02 <__fp_round+0x20>
     ef2:	bf 2b       	or	r27, r31
     ef4:	11 f4       	brne	.+4      	; 0xefa <__fp_round+0x18>
     ef6:	60 ff       	sbrs	r22, 0
     ef8:	04 c0       	rjmp	.+8      	; 0xf02 <__fp_round+0x20>
     efa:	6f 5f       	subi	r22, 0xFF	; 255
     efc:	7f 4f       	sbci	r23, 0xFF	; 255
     efe:	8f 4f       	sbci	r24, 0xFF	; 255
     f00:	9f 4f       	sbci	r25, 0xFF	; 255
     f02:	08 95       	ret

00000f04 <__fp_split3>:
     f04:	57 fd       	sbrc	r21, 7
     f06:	90 58       	subi	r25, 0x80	; 128
     f08:	44 0f       	add	r20, r20
     f0a:	55 1f       	adc	r21, r21
     f0c:	59 f0       	breq	.+22     	; 0xf24 <__fp_splitA+0x10>
     f0e:	5f 3f       	cpi	r21, 0xFF	; 255
     f10:	71 f0       	breq	.+28     	; 0xf2e <__fp_splitA+0x1a>
     f12:	47 95       	ror	r20

00000f14 <__fp_splitA>:
     f14:	88 0f       	add	r24, r24
     f16:	97 fb       	bst	r25, 7
     f18:	99 1f       	adc	r25, r25
     f1a:	61 f0       	breq	.+24     	; 0xf34 <__fp_splitA+0x20>
     f1c:	9f 3f       	cpi	r25, 0xFF	; 255
     f1e:	79 f0       	breq	.+30     	; 0xf3e <__fp_splitA+0x2a>
     f20:	87 95       	ror	r24
     f22:	08 95       	ret
     f24:	12 16       	cp	r1, r18
     f26:	13 06       	cpc	r1, r19
     f28:	14 06       	cpc	r1, r20
     f2a:	55 1f       	adc	r21, r21
     f2c:	f2 cf       	rjmp	.-28     	; 0xf12 <__fp_split3+0xe>
     f2e:	46 95       	lsr	r20
     f30:	f1 df       	rcall	.-30     	; 0xf14 <__fp_splitA>
     f32:	08 c0       	rjmp	.+16     	; 0xf44 <__fp_splitA+0x30>
     f34:	16 16       	cp	r1, r22
     f36:	17 06       	cpc	r1, r23
     f38:	18 06       	cpc	r1, r24
     f3a:	99 1f       	adc	r25, r25
     f3c:	f1 cf       	rjmp	.-30     	; 0xf20 <__fp_splitA+0xc>
     f3e:	86 95       	lsr	r24
     f40:	71 05       	cpc	r23, r1
     f42:	61 05       	cpc	r22, r1
     f44:	08 94       	sec
     f46:	08 95       	ret

00000f48 <__fp_zero>:
     f48:	e8 94       	clt

00000f4a <__fp_szero>:
     f4a:	bb 27       	eor	r27, r27
     f4c:	66 27       	eor	r22, r22
     f4e:	77 27       	eor	r23, r23
     f50:	cb 01       	movw	r24, r22
     f52:	97 f9       	bld	r25, 7
     f54:	08 95       	ret

00000f56 <__mulsf3>:
     f56:	0b d0       	rcall	.+22     	; 0xf6e <__mulsf3x>
     f58:	c4 cf       	rjmp	.-120    	; 0xee2 <__fp_round>
     f5a:	b5 df       	rcall	.-150    	; 0xec6 <__fp_pscA>
     f5c:	28 f0       	brcs	.+10     	; 0xf68 <__mulsf3+0x12>
     f5e:	ba df       	rcall	.-140    	; 0xed4 <__fp_pscB>
     f60:	18 f0       	brcs	.+6      	; 0xf68 <__mulsf3+0x12>
     f62:	95 23       	and	r25, r21
     f64:	09 f0       	breq	.+2      	; 0xf68 <__mulsf3+0x12>
     f66:	a6 cf       	rjmp	.-180    	; 0xeb4 <__fp_inf>
     f68:	ab cf       	rjmp	.-170    	; 0xec0 <__fp_nan>
     f6a:	11 24       	eor	r1, r1
     f6c:	ee cf       	rjmp	.-36     	; 0xf4a <__fp_szero>

00000f6e <__mulsf3x>:
     f6e:	ca df       	rcall	.-108    	; 0xf04 <__fp_split3>
     f70:	a0 f3       	brcs	.-24     	; 0xf5a <__mulsf3+0x4>

00000f72 <__mulsf3_pse>:
     f72:	95 9f       	mul	r25, r21
     f74:	d1 f3       	breq	.-12     	; 0xf6a <__mulsf3+0x14>
     f76:	95 0f       	add	r25, r21
     f78:	50 e0       	ldi	r21, 0x00	; 0
     f7a:	55 1f       	adc	r21, r21
     f7c:	62 9f       	mul	r22, r18
     f7e:	f0 01       	movw	r30, r0
     f80:	72 9f       	mul	r23, r18
     f82:	bb 27       	eor	r27, r27
     f84:	f0 0d       	add	r31, r0
     f86:	b1 1d       	adc	r27, r1
     f88:	63 9f       	mul	r22, r19
     f8a:	aa 27       	eor	r26, r26
     f8c:	f0 0d       	add	r31, r0
     f8e:	b1 1d       	adc	r27, r1
     f90:	aa 1f       	adc	r26, r26
     f92:	64 9f       	mul	r22, r20
     f94:	66 27       	eor	r22, r22
     f96:	b0 0d       	add	r27, r0
     f98:	a1 1d       	adc	r26, r1
     f9a:	66 1f       	adc	r22, r22
     f9c:	82 9f       	mul	r24, r18
     f9e:	22 27       	eor	r18, r18
     fa0:	b0 0d       	add	r27, r0
     fa2:	a1 1d       	adc	r26, r1
     fa4:	62 1f       	adc	r22, r18
     fa6:	73 9f       	mul	r23, r19
     fa8:	b0 0d       	add	r27, r0
     faa:	a1 1d       	adc	r26, r1
     fac:	62 1f       	adc	r22, r18
     fae:	83 9f       	mul	r24, r19
     fb0:	a0 0d       	add	r26, r0
     fb2:	61 1d       	adc	r22, r1
     fb4:	22 1f       	adc	r18, r18
     fb6:	74 9f       	mul	r23, r20
     fb8:	33 27       	eor	r19, r19
     fba:	a0 0d       	add	r26, r0
     fbc:	61 1d       	adc	r22, r1
     fbe:	23 1f       	adc	r18, r19
     fc0:	84 9f       	mul	r24, r20
     fc2:	60 0d       	add	r22, r0
     fc4:	21 1d       	adc	r18, r1
     fc6:	82 2f       	mov	r24, r18
     fc8:	76 2f       	mov	r23, r22
     fca:	6a 2f       	mov	r22, r26
     fcc:	11 24       	eor	r1, r1
     fce:	9f 57       	subi	r25, 0x7F	; 127
     fd0:	50 40       	sbci	r21, 0x00	; 0
     fd2:	8a f0       	brmi	.+34     	; 0xff6 <__mulsf3_pse+0x84>
     fd4:	e1 f0       	breq	.+56     	; 0x100e <__mulsf3_pse+0x9c>
     fd6:	88 23       	and	r24, r24
     fd8:	4a f0       	brmi	.+18     	; 0xfec <__mulsf3_pse+0x7a>
     fda:	ee 0f       	add	r30, r30
     fdc:	ff 1f       	adc	r31, r31
     fde:	bb 1f       	adc	r27, r27
     fe0:	66 1f       	adc	r22, r22
     fe2:	77 1f       	adc	r23, r23
     fe4:	88 1f       	adc	r24, r24
     fe6:	91 50       	subi	r25, 0x01	; 1
     fe8:	50 40       	sbci	r21, 0x00	; 0
     fea:	a9 f7       	brne	.-22     	; 0xfd6 <__mulsf3_pse+0x64>
     fec:	9e 3f       	cpi	r25, 0xFE	; 254
     fee:	51 05       	cpc	r21, r1
     ff0:	70 f0       	brcs	.+28     	; 0x100e <__mulsf3_pse+0x9c>
     ff2:	60 cf       	rjmp	.-320    	; 0xeb4 <__fp_inf>
     ff4:	aa cf       	rjmp	.-172    	; 0xf4a <__fp_szero>
     ff6:	5f 3f       	cpi	r21, 0xFF	; 255
     ff8:	ec f3       	brlt	.-6      	; 0xff4 <__mulsf3_pse+0x82>
     ffa:	98 3e       	cpi	r25, 0xE8	; 232
     ffc:	dc f3       	brlt	.-10     	; 0xff4 <__mulsf3_pse+0x82>
     ffe:	86 95       	lsr	r24
    1000:	77 95       	ror	r23
    1002:	67 95       	ror	r22
    1004:	b7 95       	ror	r27
    1006:	f7 95       	ror	r31
    1008:	e7 95       	ror	r30
    100a:	9f 5f       	subi	r25, 0xFF	; 255
    100c:	c1 f7       	brne	.-16     	; 0xffe <__mulsf3_pse+0x8c>
    100e:	fe 2b       	or	r31, r30
    1010:	88 0f       	add	r24, r24
    1012:	91 1d       	adc	r25, r1
    1014:	96 95       	lsr	r25
    1016:	87 95       	ror	r24
    1018:	97 f9       	bld	r25, 7
    101a:	08 95       	ret

0000101c <__ftoa_engine>:
    101c:	28 30       	cpi	r18, 0x08	; 8
    101e:	08 f0       	brcs	.+2      	; 0x1022 <__ftoa_engine+0x6>
    1020:	27 e0       	ldi	r18, 0x07	; 7
    1022:	33 27       	eor	r19, r19
    1024:	da 01       	movw	r26, r20
    1026:	99 0f       	add	r25, r25
    1028:	31 1d       	adc	r19, r1
    102a:	87 fd       	sbrc	r24, 7
    102c:	91 60       	ori	r25, 0x01	; 1
    102e:	00 96       	adiw	r24, 0x00	; 0
    1030:	61 05       	cpc	r22, r1
    1032:	71 05       	cpc	r23, r1
    1034:	39 f4       	brne	.+14     	; 0x1044 <__ftoa_engine+0x28>
    1036:	32 60       	ori	r19, 0x02	; 2
    1038:	2e 5f       	subi	r18, 0xFE	; 254
    103a:	3d 93       	st	X+, r19
    103c:	30 e3       	ldi	r19, 0x30	; 48
    103e:	2a 95       	dec	r18
    1040:	e1 f7       	brne	.-8      	; 0x103a <__ftoa_engine+0x1e>
    1042:	08 95       	ret
    1044:	9f 3f       	cpi	r25, 0xFF	; 255
    1046:	30 f0       	brcs	.+12     	; 0x1054 <__ftoa_engine+0x38>
    1048:	80 38       	cpi	r24, 0x80	; 128
    104a:	71 05       	cpc	r23, r1
    104c:	61 05       	cpc	r22, r1
    104e:	09 f0       	breq	.+2      	; 0x1052 <__ftoa_engine+0x36>
    1050:	3c 5f       	subi	r19, 0xFC	; 252
    1052:	3c 5f       	subi	r19, 0xFC	; 252
    1054:	3d 93       	st	X+, r19
    1056:	91 30       	cpi	r25, 0x01	; 1
    1058:	08 f0       	brcs	.+2      	; 0x105c <__ftoa_engine+0x40>
    105a:	80 68       	ori	r24, 0x80	; 128
    105c:	91 1d       	adc	r25, r1
    105e:	df 93       	push	r29
    1060:	cf 93       	push	r28
    1062:	1f 93       	push	r17
    1064:	0f 93       	push	r16
    1066:	ff 92       	push	r15
    1068:	ef 92       	push	r14
    106a:	19 2f       	mov	r17, r25
    106c:	98 7f       	andi	r25, 0xF8	; 248
    106e:	96 95       	lsr	r25
    1070:	e9 2f       	mov	r30, r25
    1072:	96 95       	lsr	r25
    1074:	96 95       	lsr	r25
    1076:	e9 0f       	add	r30, r25
    1078:	ff 27       	eor	r31, r31
    107a:	e6 53       	subi	r30, 0x36	; 54
    107c:	ff 4f       	sbci	r31, 0xFF	; 255
    107e:	99 27       	eor	r25, r25
    1080:	33 27       	eor	r19, r19
    1082:	ee 24       	eor	r14, r14
    1084:	ff 24       	eor	r15, r15
    1086:	a7 01       	movw	r20, r14
    1088:	e7 01       	movw	r28, r14
    108a:	05 90       	lpm	r0, Z+
    108c:	08 94       	sec
    108e:	07 94       	ror	r0
    1090:	28 f4       	brcc	.+10     	; 0x109c <__ftoa_engine+0x80>
    1092:	36 0f       	add	r19, r22
    1094:	e7 1e       	adc	r14, r23
    1096:	f8 1e       	adc	r15, r24
    1098:	49 1f       	adc	r20, r25
    109a:	51 1d       	adc	r21, r1
    109c:	66 0f       	add	r22, r22
    109e:	77 1f       	adc	r23, r23
    10a0:	88 1f       	adc	r24, r24
    10a2:	99 1f       	adc	r25, r25
    10a4:	06 94       	lsr	r0
    10a6:	a1 f7       	brne	.-24     	; 0x1090 <__ftoa_engine+0x74>
    10a8:	05 90       	lpm	r0, Z+
    10aa:	07 94       	ror	r0
    10ac:	28 f4       	brcc	.+10     	; 0x10b8 <__ftoa_engine+0x9c>
    10ae:	e7 0e       	add	r14, r23
    10b0:	f8 1e       	adc	r15, r24
    10b2:	49 1f       	adc	r20, r25
    10b4:	56 1f       	adc	r21, r22
    10b6:	c1 1d       	adc	r28, r1
    10b8:	77 0f       	add	r23, r23
    10ba:	88 1f       	adc	r24, r24
    10bc:	99 1f       	adc	r25, r25
    10be:	66 1f       	adc	r22, r22
    10c0:	06 94       	lsr	r0
    10c2:	a1 f7       	brne	.-24     	; 0x10ac <__ftoa_engine+0x90>
    10c4:	05 90       	lpm	r0, Z+
    10c6:	07 94       	ror	r0
    10c8:	28 f4       	brcc	.+10     	; 0x10d4 <__ftoa_engine+0xb8>
    10ca:	f8 0e       	add	r15, r24
    10cc:	49 1f       	adc	r20, r25
    10ce:	56 1f       	adc	r21, r22
    10d0:	c7 1f       	adc	r28, r23
    10d2:	d1 1d       	adc	r29, r1
    10d4:	88 0f       	add	r24, r24
    10d6:	99 1f       	adc	r25, r25
    10d8:	66 1f       	adc	r22, r22
    10da:	77 1f       	adc	r23, r23
    10dc:	06 94       	lsr	r0
    10de:	a1 f7       	brne	.-24     	; 0x10c8 <__ftoa_engine+0xac>
    10e0:	05 90       	lpm	r0, Z+
    10e2:	07 94       	ror	r0
    10e4:	20 f4       	brcc	.+8      	; 0x10ee <__ftoa_engine+0xd2>
    10e6:	49 0f       	add	r20, r25
    10e8:	56 1f       	adc	r21, r22
    10ea:	c7 1f       	adc	r28, r23
    10ec:	d8 1f       	adc	r29, r24
    10ee:	99 0f       	add	r25, r25
    10f0:	66 1f       	adc	r22, r22
    10f2:	77 1f       	adc	r23, r23
    10f4:	88 1f       	adc	r24, r24
    10f6:	06 94       	lsr	r0
    10f8:	a9 f7       	brne	.-22     	; 0x10e4 <__ftoa_engine+0xc8>
    10fa:	84 91       	lpm	r24, Z
    10fc:	10 95       	com	r17
    10fe:	17 70       	andi	r17, 0x07	; 7
    1100:	41 f0       	breq	.+16     	; 0x1112 <__ftoa_engine+0xf6>
    1102:	d6 95       	lsr	r29
    1104:	c7 95       	ror	r28
    1106:	57 95       	ror	r21
    1108:	47 95       	ror	r20
    110a:	f7 94       	ror	r15
    110c:	e7 94       	ror	r14
    110e:	1a 95       	dec	r17
    1110:	c1 f7       	brne	.-16     	; 0x1102 <__ftoa_engine+0xe6>
    1112:	e0 e7       	ldi	r30, 0x70	; 112
    1114:	f0 e0       	ldi	r31, 0x00	; 0
    1116:	68 94       	set
    1118:	15 90       	lpm	r1, Z+
    111a:	15 91       	lpm	r17, Z+
    111c:	35 91       	lpm	r19, Z+
    111e:	65 91       	lpm	r22, Z+
    1120:	95 91       	lpm	r25, Z+
    1122:	05 90       	lpm	r0, Z+
    1124:	7f e2       	ldi	r23, 0x2F	; 47
    1126:	73 95       	inc	r23
    1128:	e1 18       	sub	r14, r1
    112a:	f1 0a       	sbc	r15, r17
    112c:	43 0b       	sbc	r20, r19
    112e:	56 0b       	sbc	r21, r22
    1130:	c9 0b       	sbc	r28, r25
    1132:	d0 09       	sbc	r29, r0
    1134:	c0 f7       	brcc	.-16     	; 0x1126 <__ftoa_engine+0x10a>
    1136:	e1 0c       	add	r14, r1
    1138:	f1 1e       	adc	r15, r17
    113a:	43 1f       	adc	r20, r19
    113c:	56 1f       	adc	r21, r22
    113e:	c9 1f       	adc	r28, r25
    1140:	d0 1d       	adc	r29, r0
    1142:	7e f4       	brtc	.+30     	; 0x1162 <__ftoa_engine+0x146>
    1144:	70 33       	cpi	r23, 0x30	; 48
    1146:	11 f4       	brne	.+4      	; 0x114c <__ftoa_engine+0x130>
    1148:	8a 95       	dec	r24
    114a:	e6 cf       	rjmp	.-52     	; 0x1118 <__ftoa_engine+0xfc>
    114c:	e8 94       	clt
    114e:	01 50       	subi	r16, 0x01	; 1
    1150:	30 f0       	brcs	.+12     	; 0x115e <__ftoa_engine+0x142>
    1152:	08 0f       	add	r16, r24
    1154:	0a f4       	brpl	.+2      	; 0x1158 <__ftoa_engine+0x13c>
    1156:	00 27       	eor	r16, r16
    1158:	02 17       	cp	r16, r18
    115a:	08 f4       	brcc	.+2      	; 0x115e <__ftoa_engine+0x142>
    115c:	20 2f       	mov	r18, r16
    115e:	23 95       	inc	r18
    1160:	02 2f       	mov	r16, r18
    1162:	7a 33       	cpi	r23, 0x3A	; 58
    1164:	28 f0       	brcs	.+10     	; 0x1170 <__ftoa_engine+0x154>
    1166:	79 e3       	ldi	r23, 0x39	; 57
    1168:	7d 93       	st	X+, r23
    116a:	2a 95       	dec	r18
    116c:	e9 f7       	brne	.-6      	; 0x1168 <__ftoa_engine+0x14c>
    116e:	10 c0       	rjmp	.+32     	; 0x1190 <__ftoa_engine+0x174>
    1170:	7d 93       	st	X+, r23
    1172:	2a 95       	dec	r18
    1174:	89 f6       	brne	.-94     	; 0x1118 <__ftoa_engine+0xfc>
    1176:	06 94       	lsr	r0
    1178:	97 95       	ror	r25
    117a:	67 95       	ror	r22
    117c:	37 95       	ror	r19
    117e:	17 95       	ror	r17
    1180:	17 94       	ror	r1
    1182:	e1 18       	sub	r14, r1
    1184:	f1 0a       	sbc	r15, r17
    1186:	43 0b       	sbc	r20, r19
    1188:	56 0b       	sbc	r21, r22
    118a:	c9 0b       	sbc	r28, r25
    118c:	d0 09       	sbc	r29, r0
    118e:	98 f0       	brcs	.+38     	; 0x11b6 <__ftoa_engine+0x19a>
    1190:	23 95       	inc	r18
    1192:	7e 91       	ld	r23, -X
    1194:	73 95       	inc	r23
    1196:	7a 33       	cpi	r23, 0x3A	; 58
    1198:	08 f0       	brcs	.+2      	; 0x119c <__ftoa_engine+0x180>
    119a:	70 e3       	ldi	r23, 0x30	; 48
    119c:	7c 93       	st	X, r23
    119e:	20 13       	cpse	r18, r16
    11a0:	b8 f7       	brcc	.-18     	; 0x1190 <__ftoa_engine+0x174>
    11a2:	7e 91       	ld	r23, -X
    11a4:	70 61       	ori	r23, 0x10	; 16
    11a6:	7d 93       	st	X+, r23
    11a8:	30 f0       	brcs	.+12     	; 0x11b6 <__ftoa_engine+0x19a>
    11aa:	83 95       	inc	r24
    11ac:	71 e3       	ldi	r23, 0x31	; 49
    11ae:	7d 93       	st	X+, r23
    11b0:	70 e3       	ldi	r23, 0x30	; 48
    11b2:	2a 95       	dec	r18
    11b4:	e1 f7       	brne	.-8      	; 0x11ae <__ftoa_engine+0x192>
    11b6:	11 24       	eor	r1, r1
    11b8:	ef 90       	pop	r14
    11ba:	ff 90       	pop	r15
    11bc:	0f 91       	pop	r16
    11be:	1f 91       	pop	r17
    11c0:	cf 91       	pop	r28
    11c2:	df 91       	pop	r29
    11c4:	99 27       	eor	r25, r25
    11c6:	87 fd       	sbrc	r24, 7
    11c8:	90 95       	com	r25
    11ca:	08 95       	ret

000011cc <strnlen_P>:
    11cc:	fc 01       	movw	r30, r24
    11ce:	05 90       	lpm	r0, Z+
    11d0:	61 50       	subi	r22, 0x01	; 1
    11d2:	70 40       	sbci	r23, 0x00	; 0
    11d4:	01 10       	cpse	r0, r1
    11d6:	d8 f7       	brcc	.-10     	; 0x11ce <strnlen_P+0x2>
    11d8:	80 95       	com	r24
    11da:	90 95       	com	r25
    11dc:	8e 0f       	add	r24, r30
    11de:	9f 1f       	adc	r25, r31
    11e0:	08 95       	ret

000011e2 <strnlen>:
    11e2:	fc 01       	movw	r30, r24
    11e4:	61 50       	subi	r22, 0x01	; 1
    11e6:	70 40       	sbci	r23, 0x00	; 0
    11e8:	01 90       	ld	r0, Z+
    11ea:	01 10       	cpse	r0, r1
    11ec:	d8 f7       	brcc	.-10     	; 0x11e4 <strnlen+0x2>
    11ee:	80 95       	com	r24
    11f0:	90 95       	com	r25
    11f2:	8e 0f       	add	r24, r30
    11f4:	9f 1f       	adc	r25, r31
    11f6:	08 95       	ret

000011f8 <fputc>:
    11f8:	0f 93       	push	r16
    11fa:	1f 93       	push	r17
    11fc:	cf 93       	push	r28
    11fe:	df 93       	push	r29
    1200:	18 2f       	mov	r17, r24
    1202:	09 2f       	mov	r16, r25
    1204:	eb 01       	movw	r28, r22
    1206:	8b 81       	ldd	r24, Y+3	; 0x03
    1208:	81 fd       	sbrc	r24, 1
    120a:	03 c0       	rjmp	.+6      	; 0x1212 <fputc+0x1a>
    120c:	8f ef       	ldi	r24, 0xFF	; 255
    120e:	9f ef       	ldi	r25, 0xFF	; 255
    1210:	20 c0       	rjmp	.+64     	; 0x1252 <fputc+0x5a>
    1212:	82 ff       	sbrs	r24, 2
    1214:	10 c0       	rjmp	.+32     	; 0x1236 <fputc+0x3e>
    1216:	4e 81       	ldd	r20, Y+6	; 0x06
    1218:	5f 81       	ldd	r21, Y+7	; 0x07
    121a:	2c 81       	ldd	r18, Y+4	; 0x04
    121c:	3d 81       	ldd	r19, Y+5	; 0x05
    121e:	42 17       	cp	r20, r18
    1220:	53 07       	cpc	r21, r19
    1222:	7c f4       	brge	.+30     	; 0x1242 <fputc+0x4a>
    1224:	e8 81       	ld	r30, Y
    1226:	f9 81       	ldd	r31, Y+1	; 0x01
    1228:	9f 01       	movw	r18, r30
    122a:	2f 5f       	subi	r18, 0xFF	; 255
    122c:	3f 4f       	sbci	r19, 0xFF	; 255
    122e:	39 83       	std	Y+1, r19	; 0x01
    1230:	28 83       	st	Y, r18
    1232:	10 83       	st	Z, r17
    1234:	06 c0       	rjmp	.+12     	; 0x1242 <fputc+0x4a>
    1236:	e8 85       	ldd	r30, Y+8	; 0x08
    1238:	f9 85       	ldd	r31, Y+9	; 0x09
    123a:	81 2f       	mov	r24, r17
    123c:	09 95       	icall
    123e:	89 2b       	or	r24, r25
    1240:	29 f7       	brne	.-54     	; 0x120c <fputc+0x14>
    1242:	2e 81       	ldd	r18, Y+6	; 0x06
    1244:	3f 81       	ldd	r19, Y+7	; 0x07
    1246:	2f 5f       	subi	r18, 0xFF	; 255
    1248:	3f 4f       	sbci	r19, 0xFF	; 255
    124a:	3f 83       	std	Y+7, r19	; 0x07
    124c:	2e 83       	std	Y+6, r18	; 0x06
    124e:	81 2f       	mov	r24, r17
    1250:	90 2f       	mov	r25, r16
    1252:	df 91       	pop	r29
    1254:	cf 91       	pop	r28
    1256:	1f 91       	pop	r17
    1258:	0f 91       	pop	r16
    125a:	08 95       	ret

0000125c <sprintf>:
    125c:	ae e0       	ldi	r26, 0x0E	; 14
    125e:	b0 e0       	ldi	r27, 0x00	; 0
    1260:	e4 e3       	ldi	r30, 0x34	; 52
    1262:	f9 e0       	ldi	r31, 0x09	; 9
    1264:	0c 94 8c 06 	jmp	0xd18	; 0xd18 <__prologue_saves__+0x1c>
    1268:	0d 89       	ldd	r16, Y+21	; 0x15
    126a:	1e 89       	ldd	r17, Y+22	; 0x16
    126c:	86 e0       	ldi	r24, 0x06	; 6
    126e:	8c 83       	std	Y+4, r24	; 0x04
    1270:	1a 83       	std	Y+2, r17	; 0x02
    1272:	09 83       	std	Y+1, r16	; 0x01
    1274:	8f ef       	ldi	r24, 0xFF	; 255
    1276:	9f e7       	ldi	r25, 0x7F	; 127
    1278:	9e 83       	std	Y+6, r25	; 0x06
    127a:	8d 83       	std	Y+5, r24	; 0x05
    127c:	ae 01       	movw	r20, r28
    127e:	47 5e       	subi	r20, 0xE7	; 231
    1280:	5f 4f       	sbci	r21, 0xFF	; 255
    1282:	6f 89       	ldd	r22, Y+23	; 0x17
    1284:	78 8d       	ldd	r23, Y+24	; 0x18
    1286:	ce 01       	movw	r24, r28
    1288:	01 96       	adiw	r24, 0x01	; 1
    128a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <vfprintf>
    128e:	ef 81       	ldd	r30, Y+7	; 0x07
    1290:	f8 85       	ldd	r31, Y+8	; 0x08
    1292:	e0 0f       	add	r30, r16
    1294:	f1 1f       	adc	r31, r17
    1296:	10 82       	st	Z, r1
    1298:	2e 96       	adiw	r28, 0x0e	; 14
    129a:	e4 e0       	ldi	r30, 0x04	; 4
    129c:	0c 94 a8 06 	jmp	0xd50	; 0xd50 <__epilogue_restores__+0x1c>

000012a0 <__ultoa_invert>:
    12a0:	fa 01       	movw	r30, r20
    12a2:	aa 27       	eor	r26, r26
    12a4:	28 30       	cpi	r18, 0x08	; 8
    12a6:	51 f1       	breq	.+84     	; 0x12fc <__ultoa_invert+0x5c>
    12a8:	20 31       	cpi	r18, 0x10	; 16
    12aa:	81 f1       	breq	.+96     	; 0x130c <__ultoa_invert+0x6c>
    12ac:	e8 94       	clt
    12ae:	6f 93       	push	r22
    12b0:	6e 7f       	andi	r22, 0xFE	; 254
    12b2:	6e 5f       	subi	r22, 0xFE	; 254
    12b4:	7f 4f       	sbci	r23, 0xFF	; 255
    12b6:	8f 4f       	sbci	r24, 0xFF	; 255
    12b8:	9f 4f       	sbci	r25, 0xFF	; 255
    12ba:	af 4f       	sbci	r26, 0xFF	; 255
    12bc:	b1 e0       	ldi	r27, 0x01	; 1
    12be:	3e d0       	rcall	.+124    	; 0x133c <__ultoa_invert+0x9c>
    12c0:	b4 e0       	ldi	r27, 0x04	; 4
    12c2:	3c d0       	rcall	.+120    	; 0x133c <__ultoa_invert+0x9c>
    12c4:	67 0f       	add	r22, r23
    12c6:	78 1f       	adc	r23, r24
    12c8:	89 1f       	adc	r24, r25
    12ca:	9a 1f       	adc	r25, r26
    12cc:	a1 1d       	adc	r26, r1
    12ce:	68 0f       	add	r22, r24
    12d0:	79 1f       	adc	r23, r25
    12d2:	8a 1f       	adc	r24, r26
    12d4:	91 1d       	adc	r25, r1
    12d6:	a1 1d       	adc	r26, r1
    12d8:	6a 0f       	add	r22, r26
    12da:	71 1d       	adc	r23, r1
    12dc:	81 1d       	adc	r24, r1
    12de:	91 1d       	adc	r25, r1
    12e0:	a1 1d       	adc	r26, r1
    12e2:	20 d0       	rcall	.+64     	; 0x1324 <__ultoa_invert+0x84>
    12e4:	09 f4       	brne	.+2      	; 0x12e8 <__ultoa_invert+0x48>
    12e6:	68 94       	set
    12e8:	3f 91       	pop	r19
    12ea:	2a e0       	ldi	r18, 0x0A	; 10
    12ec:	26 9f       	mul	r18, r22
    12ee:	11 24       	eor	r1, r1
    12f0:	30 19       	sub	r19, r0
    12f2:	30 5d       	subi	r19, 0xD0	; 208
    12f4:	31 93       	st	Z+, r19
    12f6:	de f6       	brtc	.-74     	; 0x12ae <__ultoa_invert+0xe>
    12f8:	cf 01       	movw	r24, r30
    12fa:	08 95       	ret
    12fc:	46 2f       	mov	r20, r22
    12fe:	47 70       	andi	r20, 0x07	; 7
    1300:	40 5d       	subi	r20, 0xD0	; 208
    1302:	41 93       	st	Z+, r20
    1304:	b3 e0       	ldi	r27, 0x03	; 3
    1306:	0f d0       	rcall	.+30     	; 0x1326 <__ultoa_invert+0x86>
    1308:	c9 f7       	brne	.-14     	; 0x12fc <__ultoa_invert+0x5c>
    130a:	f6 cf       	rjmp	.-20     	; 0x12f8 <__ultoa_invert+0x58>
    130c:	46 2f       	mov	r20, r22
    130e:	4f 70       	andi	r20, 0x0F	; 15
    1310:	40 5d       	subi	r20, 0xD0	; 208
    1312:	4a 33       	cpi	r20, 0x3A	; 58
    1314:	18 f0       	brcs	.+6      	; 0x131c <__ultoa_invert+0x7c>
    1316:	49 5d       	subi	r20, 0xD9	; 217
    1318:	31 fd       	sbrc	r19, 1
    131a:	40 52       	subi	r20, 0x20	; 32
    131c:	41 93       	st	Z+, r20
    131e:	02 d0       	rcall	.+4      	; 0x1324 <__ultoa_invert+0x84>
    1320:	a9 f7       	brne	.-22     	; 0x130c <__ultoa_invert+0x6c>
    1322:	ea cf       	rjmp	.-44     	; 0x12f8 <__ultoa_invert+0x58>
    1324:	b4 e0       	ldi	r27, 0x04	; 4
    1326:	a6 95       	lsr	r26
    1328:	97 95       	ror	r25
    132a:	87 95       	ror	r24
    132c:	77 95       	ror	r23
    132e:	67 95       	ror	r22
    1330:	ba 95       	dec	r27
    1332:	c9 f7       	brne	.-14     	; 0x1326 <__ultoa_invert+0x86>
    1334:	00 97       	sbiw	r24, 0x00	; 0
    1336:	61 05       	cpc	r22, r1
    1338:	71 05       	cpc	r23, r1
    133a:	08 95       	ret
    133c:	9b 01       	movw	r18, r22
    133e:	ac 01       	movw	r20, r24
    1340:	0a 2e       	mov	r0, r26
    1342:	06 94       	lsr	r0
    1344:	57 95       	ror	r21
    1346:	47 95       	ror	r20
    1348:	37 95       	ror	r19
    134a:	27 95       	ror	r18
    134c:	ba 95       	dec	r27
    134e:	c9 f7       	brne	.-14     	; 0x1342 <__ultoa_invert+0xa2>
    1350:	62 0f       	add	r22, r18
    1352:	73 1f       	adc	r23, r19
    1354:	84 1f       	adc	r24, r20
    1356:	95 1f       	adc	r25, r21
    1358:	a0 1d       	adc	r26, r0
    135a:	08 95       	ret

0000135c <_exit>:
    135c:	f8 94       	cli

0000135e <__stop_program>:
    135e:	ff cf       	rjmp	.-2      	; 0x135e <__stop_program>
